

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Aug 27 15:11:28 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299                           
   300                           	psect	idataBANK0
   301  0222                     __pidataBANK0:	
   302                           
   303                           ;initializer for _pi
   304  0222  34DB               	retlw	219
   305  0223  340F               	retlw	15
   306  0224  3449               	retlw	73
   307  0225  3440               	retlw	64
   308                           
   309                           ;initializer for _tempo_periodo
   310  0226  346F               	retlw	111
   311  0227  3412               	retlw	18
   312  0228  3403               	retlw	3
   313  0229  343B               	retlw	59
   314  000E                     _TMR1	set	14
   315  0010                     _T1CONbits	set	16
   316  0001                     _TMR0	set	1
   317  001F                     _ADCON0bits	set	31
   318  001A                     _RCREG	set	26
   319  0019                     _TXREG	set	25
   320  0018                     _RCSTAbits	set	24
   321  000B                     _INTCONbits	set	11
   322  0007                     _PORTC	set	7
   323  0006                     _PORTB	set	6
   324  0005                     _PORTA	set	5
   325  000C                     _PIR1bits	set	12
   326  00C1                     _OERR	set	193
   327  0081                     _OPTION_REGbits	set	129
   328  009F                     _ADCON1bits	set	159
   329  008C                     _PIE1bits	set	140
   330  0098                     _TXSTAbits	set	152
   331  0099                     _SPBRG	set	153
   332  0087                     _TRISC	set	135
   333  0086                     _TRISB	set	134
   334  0085                     _TRISA	set	133
   335                           
   336                           	psect	strings
   337  01C2                     __pstrings:	
   338  01C2                     stringtab:	
   339  01C2                     __stringtab:	
   340  01C2                     stringcode:	
   341                           ;	String table - string pointers are 1 byte each
   342                           
   343  01C2                     stringdir:	
   344  01C2  3001               	movlw	high stringdir
   345  01C3  008A               	movwf	10
   346  01C4  0804               	movf	4,w
   347  01C5  0A84               	incf	4,f
   348  01C6  0782               	addwf	2,f
   349  01C7                     __stringbase:	
   350  01C7  3400               	retlw	0
   351  01C8                     __end_of__stringtab:	
   352  01C8                     STR_1:	
   353  01C8  340A               	retlw	10
   354  01C9  340D               	retlw	13
   355  01CA  3420               	retlw	32	;' '
   356  01CB  342D               	retlw	45	;'-'
   357  01CC  342D               	retlw	45	;'-'
   358  01CD  342D               	retlw	45	;'-'
   359  01CE  342D               	retlw	45	;'-'
   360  01CF  342D               	retlw	45	;'-'
   361  01D0  342D               	retlw	45	;'-'
   362  01D1  342D               	retlw	45	;'-'
   363  01D2  3420               	retlw	32	;' '
   364  01D3  3445               	retlw	69	;'E'
   365  01D4  3453               	retlw	83	;'S'
   366  01D5  3454               	retlw	84	;'T'
   367  01D6  344F               	retlw	79	;'O'
   368  01D7  3455               	retlw	85	;'U'
   369  01D8  3452               	retlw	82	;'R'
   370  01D9  344F               	retlw	79	;'O'
   371  01DA  3420               	retlw	32	;' '
   372  01DB  3444               	retlw	68	;'D'
   373  01DC  3445               	retlw	69	;'E'
   374  01DD  3420               	retlw	32	;' '
   375  01DE  3450               	retlw	80	;'P'
   376  01DF  3449               	retlw	73	;'I'
   377  01E0  344C               	retlw	76	;'L'
   378  01E1  3448               	retlw	72	;'H'
   379  01E2  3441               	retlw	65	;'A'
   380  01E3  3420               	retlw	32	;' '
   381  01E4  342D               	retlw	45	;'-'
   382  01E5  342D               	retlw	45	;'-'
   383  01E6  342D               	retlw	45	;'-'
   384  01E7  342D               	retlw	45	;'-'
   385  01E8  342D               	retlw	45	;'-'
   386  01E9  342D               	retlw	45	;'-'
   387  01EA  342D               	retlw	45	;'-'
   388  01EB  3420               	retlw	32	;' '
   389  01EC  340A               	retlw	10
   390  01ED  340D               	retlw	13
   391  01EE  3420               	retlw	32	;' '
   392  01EF  3400               	retlw	0
   393                           
   394                           ; #config settings
   395  0000                     
   396                           	psect	cinit
   397  0015                     start_initialization:	
   398  0015                     __initialization:	
   399                           
   400                           ; Initialize objects allocated to BANK0
   401  0015  1383               	bcf	3,7	;select IRP bank0
   402  0016  304F               	movlw	low (__pdataBANK0+8)
   403  0017  00FD               	movwf	btemp+-1
   404  0018  3002               	movlw	high __pidataBANK0
   405  0019  00FE               	movwf	btemp
   406  001A  3022               	movlw	low __pidataBANK0
   407  001B  00FF               	movwf	btemp+1
   408  001C  3047               	movlw	low __pdataBANK0
   409  001D  0084               	movwf	4
   410  001E  120A  118A  2206   	fcall	init_ram0
   411                           
   412                           ; Clear objects allocated to BANK0
   413  0021  01B9               	clrf	__pbssBANK0& (0+127)
   414  0022  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   415  0023  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   416  0024  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   417  0025  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   418  0026  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   419  0027  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   420  0028  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   421  0029  01C1               	clrf	(__pbssBANK0+8)& (0+127)
   422  002A  01C2               	clrf	(__pbssBANK0+9)& (0+127)
   423  002B  01C3               	clrf	(__pbssBANK0+10)& (0+127)
   424  002C  01C4               	clrf	(__pbssBANK0+11)& (0+127)
   425  002D  01C5               	clrf	(__pbssBANK0+12)& (0+127)
   426  002E  01C6               	clrf	(__pbssBANK0+13)& (0+127)
   427                           
   428                           ; Clear objects allocated to COMMON
   429  002F  01F9               	clrf	__pbssCOMMON& (0+127)
   430  0030  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   431  0031  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   432  0032  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   433  0033                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  0033                     __end_of__initialization:	
   437  0033  0183               	clrf	3
   438  0034  120A  118A  2986   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMMON
   441  0079                     __pbssCOMMON:	
   442  0079                     _CODIGO:	
   443  0079                     	ds	2
   444  007B                     _LOW:	
   445  007B                     	ds	1
   446  007C                     _HIGH:	
   447  007C                     	ds	1
   448                           
   449                           	psect	bssBANK0
   450  0039                     __pbssBANK0:	
   451  0039                     _valor:	
   452  0039                     	ds	4
   453  003D                     _t:	
   454  003D                     	ds	4
   455  0041                     _ADC_Buffer:	
   456  0041                     	ds	4
   457  0045                     _tipoSinal:	
   458  0045                     	ds	2
   459                           
   460                           	psect	dataBANK0
   461  0047                     __pdataBANK0:	
   462  0047                     _pi:	
   463  0047                     	ds	4
   464  004B                     _tempo_periodo:	
   465  004B                     	ds	4
   466                           
   467                           	psect	inittext
   468  0202                     init_fetch0:	
   469                           ;	Called with low address in FSR and high address in W
   470                           
   471  0202  087E               	movf	126,w
   472  0203  008A               	movwf	10
   473  0204  087F               	movf	127,w
   474  0205  0082               	movwf	2
   475  0206                     init_ram0:	
   476                           ;Called with:
   477                           ;	high address of idata address in btemp 
   478                           ;	low address of idata address in btemp+1 
   479                           ;	low address of data in FSR
   480                           ;	high address + 1 of data in btemp-1
   481                           
   482  0206  2202  120A  118A   	fcall	init_fetch0
   483  0209  0080               	movwf	0
   484  020A  0A84               	incf	4,f
   485  020B  0804               	movf	4,w
   486  020C  067D               	xorwf	125,w
   487  020D  1903               	btfsc	3,2
   488  020E  3400               	retlw	0
   489  020F  0AFF               	incf	127,f
   490  0210  1903               	btfsc	3,2
   491  0211  0AFE               	incf	126,f
   492  0212  2A06               	goto	init_ram0
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:	
   496  0070                     ?_USART_WriteChar:	
   497  0070                     ??_USART_WriteChar:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_TIMER1_Init:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_ADC_Init:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_ISR:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?i1_TIMER1_Set:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     USART_WriteChar@USART_Data:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     i1TIMER1_Set@count:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 2 bytes @ 0x0
   523  0070                     	ds	2
   524  0072                     ??_ISR:	
   525  0072                     ??i1_TIMER1_Set:	
   526                           ; 1 bytes @ 0x2
   527                           
   528                           
   529                           ; 1 bytes @ 0x2
   530  0072                     	ds	5
   531  0077                     ISR@checksum:	
   532                           
   533                           ; 1 bytes @ 0x7
   534  0077                     	ds	1
   535  0078                     ISR@index:	
   536                           
   537                           ; 1 bytes @ 0x8
   538  0078                     	ds	1
   539                           
   540                           	psect	cstackBANK0
   541  0020                     __pcstackBANK0:	
   542  0020                     ?_TIMER1_Set:	
   543  0020                     ??_TIMER1_Init:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0020                     ??_ADC_Init:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0020                     ?___aldiv:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0020                     TIMER1_Set@count:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0020                     ___aldiv@divisor:	
   556                           ; 2 bytes @ 0x0
   557                           
   558                           
   559                           ; 4 bytes @ 0x0
   560  0020                     	ds	2
   561  0022                     ??_TIMER1_Set:	
   562                           
   563                           ; 1 bytes @ 0x2
   564  0022                     	ds	2
   565  0024                     ___aldiv@dividend:	
   566                           
   567                           ; 4 bytes @ 0x4
   568  0024                     	ds	4
   569  0028                     ??___aldiv:	
   570                           
   571                           ; 1 bytes @ 0x8
   572  0028                     	ds	1
   573  0029                     ___aldiv@counter:	
   574                           
   575                           ; 1 bytes @ 0x9
   576  0029                     	ds	1
   577  002A                     ___aldiv@sign:	
   578                           
   579                           ; 1 bytes @ 0xA
   580  002A                     	ds	1
   581  002B                     ___aldiv@quotient:	
   582                           
   583                           ; 4 bytes @ 0xB
   584  002B                     	ds	4
   585  002F                     ?_USART_Init:	
   586  002F                     USART_Init@BaudRate:	
   587                           ; 1 bytes @ 0xF
   588                           
   589                           
   590                           ; 4 bytes @ 0xF
   591  002F                     	ds	4
   592  0033                     ??_USART_Init:	
   593                           
   594                           ; 1 bytes @ 0x13
   595  0033                     	ds	5
   596  0038                     USART_Init@BR:	
   597                           
   598                           ; 1 bytes @ 0x18
   599  0038                     	ds	1
   600  0039                     ??_main:	
   601                           
   602                           	psect	maintext
   603  0186                     __pmaintext:	
   604                           ; 1 bytes @ 0x19
   605 ;;
   606 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   607 ;;
   608 ;; *************** function _main *****************
   609 ;; Defined at:
   610 ;;		line 109 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : B00/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels required when called:    4
   630 ;; This function calls:
   631 ;;		_ADC_Init
   632 ;;		_TIMER1_Init
   633 ;;		_TIMER1_Set
   634 ;;		_USART_Init
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _main
   642  0186                     _main:	
   643                           
   644                           ;main.c: 112: TRISA = 0b00000001;
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   648  0186  3001               	movlw	1
   649  0187  1683               	bsf	3,5	;RP0=1, select bank1
   650  0188  1303               	bcf	3,6	;RP1=0, select bank1
   651  0189  0085               	movwf	5	;volatile
   652                           
   653                           ;main.c: 113: PORTA = 0b00000001;
   654  018A  3001               	movlw	1
   655  018B  1283               	bcf	3,5	;RP0=0, select bank0
   656  018C  1303               	bcf	3,6	;RP1=0, select bank0
   657  018D  0085               	movwf	5	;volatile
   658                           
   659                           ;main.c: 114: TRISB = 0b00110000;
   660  018E  3030               	movlw	48
   661  018F  1683               	bsf	3,5	;RP0=1, select bank1
   662  0190  1303               	bcf	3,6	;RP1=0, select bank1
   663  0191  0086               	movwf	6	;volatile
   664                           
   665                           ;main.c: 115: PORTB = 0b00000000;
   666  0192  1283               	bcf	3,5	;RP0=0, select bank0
   667  0193  1303               	bcf	3,6	;RP1=0, select bank0
   668  0194  0186               	clrf	6	;volatile
   669                           
   670                           ;main.c: 116: TRISC = 0b10000000;
   671  0195  3080               	movlw	128
   672  0196  1683               	bsf	3,5	;RP0=1, select bank1
   673  0197  1303               	bcf	3,6	;RP1=0, select bank1
   674  0198  0087               	movwf	7	;volatile
   675                           
   676                           ;main.c: 117: PORTC = 0b11000000;
   677  0199  30C0               	movlw	192
   678  019A  1283               	bcf	3,5	;RP0=0, select bank0
   679  019B  1303               	bcf	3,6	;RP1=0, select bank0
   680  019C  0087               	movwf	7	;volatile
   681                           
   682                           ;main.c: 120: USART_Init(115200);
   683  019D  3000               	movlw	0
   684  019E  00B2               	movwf	USART_Init@BaudRate+3
   685  019F  3001               	movlw	1
   686  01A0  00B1               	movwf	USART_Init@BaudRate+2
   687  01A1  30C2               	movlw	194
   688  01A2  00B0               	movwf	USART_Init@BaudRate+1
   689  01A3  3000               	movlw	0
   690  01A4  00AF               	movwf	USART_Init@BaudRate
   691  01A5  120A  118A  213C  120A  118A  	fcall	_USART_Init
   692                           
   693                           ;main.c: 121: TIMER1_Init();
   694  01AA  120A  118A  2213  120A  118A  	fcall	_TIMER1_Init
   695                           
   696                           ;main.c: 122: ADC_Init();
   697  01AF  120A  118A  21F0  120A  118A  	fcall	_ADC_Init
   698                           
   699                           ;main.c: 125: TIMER1_Set(54016);
   700  01B4  3000               	movlw	0
   701  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   702  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   703  01B7  00A0               	movwf	TIMER1_Set@count
   704  01B8  30D3               	movlw	211
   705  01B9  00A1               	movwf	TIMER1_Set@count+1
   706  01BA  120A  118A  2232  120A  118A  	fcall	_TIMER1_Set
   707                           
   708                           ;main.c: 128: INTCONbits.PEIE = 1;
   709  01BF  170B               	bsf	11,6	;volatile
   710                           
   711                           ;main.c: 129: INTCONbits.GIE = 1;
   712  01C0  178B               	bsf	11,7	;volatile
   713  01C1                     l59:	
   714                           ;main.c: 131: while(1)
   715                           
   716                           
   717                           ;main.c: 132: {
   718  01C1  29C1               	goto	l59
   719  01C2                     __end_of_main:	
   720                           
   721                           	psect	text1
   722  013C                     __ptext1:	
   723 ;; *************** function _USART_Init *****************
   724 ;; Defined at:
   725 ;;		line 6 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\usart.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  BaudRate        4   15[BANK0 ] long 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  BR              1   24[BANK0 ] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       4       0       0       0
   740 ;;      Locals:         0       1       0       0       0
   741 ;;      Temps:          0       5       0       0       0
   742 ;;      Totals:         0      10       0       0       0
   743 ;;Total ram usage:       10 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    3
   746 ;; This function calls:
   747 ;;		___aldiv
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _USART_Init
   755  013C                     _USART_Init:	
   756                           
   757                           ;usart.c: 12: unsigned char BR = 0;
   758                           
   759                           ;incstack = 0
   760                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
   761  013C  1283               	bcf	3,5	;RP0=0, select bank0
   762  013D  1303               	bcf	3,6	;RP1=0, select bank0
   763  013E  01B8               	clrf	USART_Init@BR
   764                           
   765                           ;usart.c: 15: BR = (18432000 / (16 * BaudRate)) - 1;
   766  013F  082F               	movf	USART_Init@BaudRate,w
   767  0140  00B3               	movwf	??_USART_Init
   768  0141  0830               	movf	USART_Init@BaudRate+1,w
   769  0142  00B4               	movwf	??_USART_Init+1
   770  0143  0831               	movf	USART_Init@BaudRate+2,w
   771  0144  00B5               	movwf	??_USART_Init+2
   772  0145  0832               	movf	USART_Init@BaudRate+3,w
   773  0146  00B6               	movwf	??_USART_Init+3
   774  0147  3004               	movlw	4
   775  0148                     u315:	
   776  0148  1003               	clrc
   777  0149  0DB3               	rlf	??_USART_Init,f
   778  014A  0DB4               	rlf	??_USART_Init+1,f
   779  014B  0DB5               	rlf	??_USART_Init+2,f
   780  014C  0DB6               	rlf	??_USART_Init+3,f
   781  014D  3EFF               	addlw	-1
   782  014E  1D03               	skipz
   783  014F  2948               	goto	u315
   784  0150  0836               	movf	??_USART_Init+3,w
   785  0151  00A3               	movwf	___aldiv@divisor+3
   786  0152  0835               	movf	??_USART_Init+2,w
   787  0153  00A2               	movwf	___aldiv@divisor+2
   788  0154  0834               	movf	??_USART_Init+1,w
   789  0155  00A1               	movwf	___aldiv@divisor+1
   790  0156  0833               	movf	??_USART_Init,w
   791  0157  00A0               	movwf	___aldiv@divisor
   792  0158  3001               	movlw	1
   793  0159  00A7               	movwf	___aldiv@dividend+3
   794  015A  3019               	movlw	25
   795  015B  00A6               	movwf	___aldiv@dividend+2
   796  015C  3040               	movlw	64
   797  015D  00A5               	movwf	___aldiv@dividend+1
   798  015E  3000               	movlw	0
   799  015F  00A4               	movwf	___aldiv@dividend
   800  0160  120A  118A  2037   	fcall	___aldiv
   801  0163  1283               	bcf	3,5	;RP0=0, select bank0
   802  0164  1303               	bcf	3,6	;RP1=0, select bank0
   803  0165  0820               	movf	?___aldiv,w
   804  0166  3EFF               	addlw	255
   805  0167  00B7               	movwf	??_USART_Init+4
   806  0168  0837               	movf	??_USART_Init+4,w
   807  0169  00B8               	movwf	USART_Init@BR
   808                           
   809                           ;usart.c: 16: SPBRG = BR;
   810  016A  0838               	movf	USART_Init@BR,w
   811  016B  1683               	bsf	3,5	;RP0=1, select bank1
   812  016C  1303               	bcf	3,6	;RP1=0, select bank1
   813  016D  0099               	movwf	25	;volatile
   814                           
   815                           ;usart.c: 19: TXSTAbits.CSRC = 0;
   816  016E  1398               	bcf	24,7	;volatile
   817                           
   818                           ;usart.c: 20: TXSTAbits.TX9 = 0;
   819  016F  1318               	bcf	24,6	;volatile
   820                           
   821                           ;usart.c: 21: TXSTAbits.TXEN = 1;
   822  0170  1698               	bsf	24,5	;volatile
   823                           
   824                           ;usart.c: 22: TXSTAbits.SYNC = 0;
   825  0171  1218               	bcf	24,4	;volatile
   826                           
   827                           ;usart.c: 23: TXSTAbits.BRGH = 1;
   828  0172  1518               	bsf	24,2	;volatile
   829                           
   830                           ;usart.c: 24: TXSTAbits.TRMT = 1;
   831  0173  1498               	bsf	24,1	;volatile
   832                           
   833                           ;usart.c: 25: TXSTAbits.TX9D = 0;
   834  0174  1018               	bcf	24,0	;volatile
   835                           
   836                           ;usart.c: 28: RCSTAbits.SPEN = 1;
   837  0175  1283               	bcf	3,5	;RP0=0, select bank0
   838  0176  1303               	bcf	3,6	;RP1=0, select bank0
   839  0177  1798               	bsf	24,7	;volatile
   840                           
   841                           ;usart.c: 29: RCSTAbits.RX9 = 0;
   842  0178  1318               	bcf	24,6	;volatile
   843                           
   844                           ;usart.c: 30: RCSTAbits.SREN = 0;
   845  0179  1298               	bcf	24,5	;volatile
   846                           
   847                           ;usart.c: 31: RCSTAbits.CREN = 1;
   848  017A  1618               	bsf	24,4	;volatile
   849                           
   850                           ;usart.c: 32: RCSTAbits.ADDEN = 0;
   851  017B  1198               	bcf	24,3	;volatile
   852                           
   853                           ;usart.c: 33: RCSTAbits.FERR = 0;
   854  017C  1118               	bcf	24,2	;volatile
   855                           
   856                           ;usart.c: 34: RCSTAbits.OERR = 0;
   857  017D  1098               	bcf	24,1	;volatile
   858                           
   859                           ;usart.c: 35: RCSTAbits.RX9D = 0;
   860  017E  1018               	bcf	24,0	;volatile
   861                           
   862                           ;usart.c: 38: PIE1bits.RCIE = 1;
   863  017F  1683               	bsf	3,5	;RP0=1, select bank1
   864  0180  1303               	bcf	3,6	;RP1=0, select bank1
   865  0181  168C               	bsf	12,5	;volatile
   866                           
   867                           ;usart.c: 39: PIR1bits.RCIF = 0;
   868  0182  1283               	bcf	3,5	;RP0=0, select bank0
   869  0183  1303               	bcf	3,6	;RP1=0, select bank0
   870  0184  128C               	bcf	12,5	;volatile
   871  0185  0008               	return
   872  0186                     __end_of_USART_Init:	
   873                           
   874                           	psect	text2
   875  0037                     __ptext2:	
   876 ;; *************** function ___aldiv *****************
   877 ;; Defined at:
   878 ;;		line 6 in file "E:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  divisor         4    0[BANK0 ] long 
   881 ;;  dividend        4    4[BANK0 ] long 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  quotient        4   11[BANK0 ] long 
   884 ;;  sign            1   10[BANK0 ] unsigned char 
   885 ;;  counter         1    9[BANK0 ] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  4    0[BANK0 ] long 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       8       0       0       0
   896 ;;      Locals:         0       6       0       0       0
   897 ;;      Temps:          0       1       0       0       0
   898 ;;      Totals:         0      15       0       0       0
   899 ;;Total ram usage:       15 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    2
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_USART_Init
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function ___aldiv
   911  0037                     ___aldiv:	
   912                           
   913                           ;incstack = 0
   914                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   915  0037  1283               	bcf	3,5	;RP0=0, select bank0
   916  0038  1303               	bcf	3,6	;RP1=0, select bank0
   917  0039  01AA               	clrf	___aldiv@sign
   918  003A  1FA3               	btfss	___aldiv@divisor+3,7
   919  003B  2849               	goto	l278
   920  003C  09A0               	comf	___aldiv@divisor,f
   921  003D  09A1               	comf	___aldiv@divisor+1,f
   922  003E  09A2               	comf	___aldiv@divisor+2,f
   923  003F  09A3               	comf	___aldiv@divisor+3,f
   924  0040  0AA0               	incf	___aldiv@divisor,f
   925  0041  1903               	skipnz
   926  0042  0AA1               	incf	___aldiv@divisor+1,f
   927  0043  1903               	skipnz
   928  0044  0AA2               	incf	___aldiv@divisor+2,f
   929  0045  1903               	skipnz
   930  0046  0AA3               	incf	___aldiv@divisor+3,f
   931  0047  01AA               	clrf	___aldiv@sign
   932  0048  0AAA               	incf	___aldiv@sign,f
   933  0049                     l278:	
   934  0049  1FA7               	btfss	___aldiv@dividend+3,7
   935  004A  285A               	goto	l837
   936  004B  09A4               	comf	___aldiv@dividend,f
   937  004C  09A5               	comf	___aldiv@dividend+1,f
   938  004D  09A6               	comf	___aldiv@dividend+2,f
   939  004E  09A7               	comf	___aldiv@dividend+3,f
   940  004F  0AA4               	incf	___aldiv@dividend,f
   941  0050  1903               	skipnz
   942  0051  0AA5               	incf	___aldiv@dividend+1,f
   943  0052  1903               	skipnz
   944  0053  0AA6               	incf	___aldiv@dividend+2,f
   945  0054  1903               	skipnz
   946  0055  0AA7               	incf	___aldiv@dividend+3,f
   947  0056  3001               	movlw	1
   948  0057  00A8               	movwf	??___aldiv
   949  0058  0828               	movf	??___aldiv,w
   950  0059  06AA               	xorwf	___aldiv@sign,f
   951  005A                     l837:	
   952  005A  3000               	movlw	0
   953  005B  00AE               	movwf	___aldiv@quotient+3
   954  005C  3000               	movlw	0
   955  005D  00AD               	movwf	___aldiv@quotient+2
   956  005E  3000               	movlw	0
   957  005F  00AC               	movwf	___aldiv@quotient+1
   958  0060  3000               	movlw	0
   959  0061  00AB               	movwf	___aldiv@quotient
   960  0062  0823               	movf	___aldiv@divisor+3,w
   961  0063  0422               	iorwf	___aldiv@divisor+2,w
   962  0064  0421               	iorwf	___aldiv@divisor+1,w
   963  0065  0420               	iorwf	___aldiv@divisor,w
   964  0066  1903               	skipnz
   965  0067  28AF               	goto	l859
   966  0068  01A9               	clrf	___aldiv@counter
   967  0069  0AA9               	incf	___aldiv@counter,f
   968  006A                     l845:	
   969  006A  1BA3               	btfsc	___aldiv@divisor+3,7
   970  006B  287A               	goto	l847
   971  006C  3001               	movlw	1
   972  006D  00A8               	movwf	??___aldiv
   973  006E                     u235:	
   974  006E  1003               	clrc
   975  006F  0DA0               	rlf	___aldiv@divisor,f
   976  0070  0DA1               	rlf	___aldiv@divisor+1,f
   977  0071  0DA2               	rlf	___aldiv@divisor+2,f
   978  0072  0DA3               	rlf	___aldiv@divisor+3,f
   979  0073  0BA8               	decfsz	??___aldiv,f
   980  0074  286E               	goto	u235
   981  0075  3001               	movlw	1
   982  0076  00A8               	movwf	??___aldiv
   983  0077  0828               	movf	??___aldiv,w
   984  0078  07A9               	addwf	___aldiv@counter,f
   985  0079  286A               	goto	l845
   986  007A                     l847:	
   987  007A  3001               	movlw	1
   988  007B  00A8               	movwf	??___aldiv
   989  007C                     u255:	
   990  007C  1003               	clrc
   991  007D  0DAB               	rlf	___aldiv@quotient,f
   992  007E  0DAC               	rlf	___aldiv@quotient+1,f
   993  007F  0DAD               	rlf	___aldiv@quotient+2,f
   994  0080  0DAE               	rlf	___aldiv@quotient+3,f
   995  0081  0BA8               	decfsz	??___aldiv,f
   996  0082  287C               	goto	u255
   997  0083  0823               	movf	___aldiv@divisor+3,w
   998  0084  0227               	subwf	___aldiv@dividend+3,w
   999  0085  1D03               	skipz
  1000  0086  2891               	goto	u265
  1001  0087  0822               	movf	___aldiv@divisor+2,w
  1002  0088  0226               	subwf	___aldiv@dividend+2,w
  1003  0089  1D03               	skipz
  1004  008A  2891               	goto	u265
  1005  008B  0821               	movf	___aldiv@divisor+1,w
  1006  008C  0225               	subwf	___aldiv@dividend+1,w
  1007  008D  1D03               	skipz
  1008  008E  2891               	goto	u265
  1009  008F  0820               	movf	___aldiv@divisor,w
  1010  0090  0224               	subwf	___aldiv@dividend,w
  1011  0091                     u265:	
  1012  0091  1C03               	skipc
  1013  0092  28A2               	goto	l855
  1014  0093  0820               	movf	___aldiv@divisor,w
  1015  0094  02A4               	subwf	___aldiv@dividend,f
  1016  0095  0821               	movf	___aldiv@divisor+1,w
  1017  0096  1C03               	skipc
  1018  0097  0F21               	incfsz	___aldiv@divisor+1,w
  1019  0098  02A5               	subwf	___aldiv@dividend+1,f
  1020  0099  0822               	movf	___aldiv@divisor+2,w
  1021  009A  1C03               	skipc
  1022  009B  0F22               	incfsz	___aldiv@divisor+2,w
  1023  009C  02A6               	subwf	___aldiv@dividend+2,f
  1024  009D  0823               	movf	___aldiv@divisor+3,w
  1025  009E  1C03               	skipc
  1026  009F  0F23               	incfsz	___aldiv@divisor+3,w
  1027  00A0  02A7               	subwf	___aldiv@dividend+3,f
  1028  00A1  142B               	bsf	___aldiv@quotient,0
  1029  00A2                     l855:	
  1030  00A2  3001               	movlw	1
  1031  00A3                     u275:	
  1032  00A3  1003               	clrc
  1033  00A4  0CA3               	rrf	___aldiv@divisor+3,f
  1034  00A5  0CA2               	rrf	___aldiv@divisor+2,f
  1035  00A6  0CA1               	rrf	___aldiv@divisor+1,f
  1036  00A7  0CA0               	rrf	___aldiv@divisor,f
  1037  00A8  3EFF               	addlw	-1
  1038  00A9  1D03               	skipz
  1039  00AA  28A3               	goto	u275
  1040  00AB  3001               	movlw	1
  1041  00AC  02A9               	subwf	___aldiv@counter,f
  1042  00AD  1D03               	btfss	3,2
  1043  00AE  287A               	goto	l847
  1044  00AF                     l859:	
  1045  00AF  082A               	movf	___aldiv@sign,w
  1046  00B0  1903               	btfsc	3,2
  1047  00B1  28BD               	goto	l863
  1048  00B2  09AB               	comf	___aldiv@quotient,f
  1049  00B3  09AC               	comf	___aldiv@quotient+1,f
  1050  00B4  09AD               	comf	___aldiv@quotient+2,f
  1051  00B5  09AE               	comf	___aldiv@quotient+3,f
  1052  00B6  0AAB               	incf	___aldiv@quotient,f
  1053  00B7  1903               	skipnz
  1054  00B8  0AAC               	incf	___aldiv@quotient+1,f
  1055  00B9  1903               	skipnz
  1056  00BA  0AAD               	incf	___aldiv@quotient+2,f
  1057  00BB  1903               	skipnz
  1058  00BC  0AAE               	incf	___aldiv@quotient+3,f
  1059  00BD                     l863:	
  1060  00BD  082E               	movf	___aldiv@quotient+3,w
  1061  00BE  00A3               	movwf	?___aldiv+3
  1062  00BF  082D               	movf	___aldiv@quotient+2,w
  1063  00C0  00A2               	movwf	?___aldiv+2
  1064  00C1  082C               	movf	___aldiv@quotient+1,w
  1065  00C2  00A1               	movwf	?___aldiv+1
  1066  00C3  082B               	movf	___aldiv@quotient,w
  1067  00C4  00A0               	movwf	?___aldiv
  1068  00C5  0008               	return
  1069  00C6                     __end_of___aldiv:	
  1070                           
  1071                           	psect	text3
  1072  0232                     __ptext3:	
  1073 ;; *************** function _TIMER1_Set *****************
  1074 ;; Defined at:
  1075 ;;		line 36 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\timers.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  count           2    0[BANK0 ] unsigned int 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       2       0       0       0
  1090 ;;      Locals:         0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         0       2       0       0       0
  1093 ;;Total ram usage:        2 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    2
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _TIMER1_Set
  1105  0232                     _TIMER1_Set:	
  1106                           
  1107                           ;timers.c: 38: TMR1 = count;
  1108                           
  1109                           ;incstack = 0
  1110                           ; Regs used in _TIMER1_Set: [wreg]
  1111  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0234  0821               	movf	TIMER1_Set@count+1,w
  1114  0235  008F               	movwf	15	;volatile
  1115  0236  0820               	movf	TIMER1_Set@count,w
  1116  0237  008E               	movwf	14	;volatile
  1117  0238  0008               	return
  1118  0239                     __end_of_TIMER1_Set:	
  1119                           
  1120                           	psect	text4
  1121  0213                     __ptext4:	
  1122 ;; *************** function _TIMER1_Init *****************
  1123 ;; Defined at:
  1124 ;;		line 23 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\timers.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		None
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0
  1141 ;;      Totals:         0       0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    2
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _TIMER1_Init
  1154  0213                     _TIMER1_Init:	
  1155                           
  1156                           ;timers.c: 26: T1CONbits.T1CKPS1 = 0;
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _TIMER1_Init: []
  1160  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0215  1290               	bcf	16,5	;volatile
  1163                           
  1164                           ;timers.c: 27: T1CONbits.T1CKPS0 = 0;
  1165  0216  1210               	bcf	16,4	;volatile
  1166                           
  1167                           ;timers.c: 28: T1CONbits.T1OSCEN = 1;
  1168  0217  1590               	bsf	16,3	;volatile
  1169                           
  1170                           ;timers.c: 29: T1CONbits.nT1SYNC = 1;
  1171  0218  1510               	bsf	16,2	;volatile
  1172                           
  1173                           ;timers.c: 30: T1CONbits.TMR1CS = 0;
  1174  0219  1090               	bcf	16,1	;volatile
  1175                           
  1176                           ;timers.c: 31: T1CONbits.TMR1ON = 1;
  1177  021A  1410               	bsf	16,0	;volatile
  1178                           
  1179                           ;timers.c: 32: PIE1bits.TMR1IE = 1;
  1180  021B  1683               	bsf	3,5	;RP0=1, select bank1
  1181  021C  1303               	bcf	3,6	;RP1=0, select bank1
  1182  021D  140C               	bsf	12,0	;volatile
  1183                           
  1184                           ;timers.c: 33: PIR1bits.TMR1IF = 0;
  1185  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1186  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0220  100C               	bcf	12,0	;volatile
  1188  0221  0008               	return
  1189  0222                     __end_of_TIMER1_Init:	
  1190                           
  1191                           	psect	text5
  1192  01F0                     __ptext5:	
  1193 ;; *************** function _ADC_Init *****************
  1194 ;; Defined at:
  1195 ;;		line 6 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\adc.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		None
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       0       0       0       0
  1210 ;;      Locals:         0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0
  1212 ;;      Totals:         0       0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    2
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _ADC_Init
  1225  01F0                     _ADC_Init:	
  1226                           
  1227                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _ADC_Init: []
  1231  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  1232  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1233  01F2  179F               	bsf	31,7	;volatile
  1234                           
  1235                           ;adc.c: 10: ADCON1bits.PCFG3 = 0;
  1236  01F3  119F               	bcf	31,3	;volatile
  1237                           
  1238                           ;adc.c: 11: ADCON1bits.PCFG2 = 0;
  1239  01F4  111F               	bcf	31,2	;volatile
  1240                           
  1241                           ;adc.c: 12: ADCON1bits.PCFG1 = 0;
  1242  01F5  109F               	bcf	31,1	;volatile
  1243                           
  1244                           ;adc.c: 13: ADCON1bits.PCFG0 = 0;
  1245  01F6  101F               	bcf	31,0	;volatile
  1246                           
  1247                           ;adc.c: 17: ADCON0bits.ADCS1 = 1;
  1248  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1249  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1250  01F9  179F               	bsf	31,7	;volatile
  1251                           
  1252                           ;adc.c: 18: ADCON0bits.ADCS0 = 0;
  1253  01FA  131F               	bcf	31,6	;volatile
  1254                           
  1255                           ;adc.c: 21: PIE1bits.ADIE = 0;
  1256  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1257  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1258  01FD  130C               	bcf	12,6	;volatile
  1259                           
  1260                           ;adc.c: 22: PIR1bits.ADIF = 0;
  1261  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1262  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0200  130C               	bcf	12,6	;volatile
  1264  0201  0008               	return
  1265  0202                     __end_of_ADC_Init:	
  1266                           
  1267                           	psect	text6
  1268  00C6                     __ptext6:	
  1269 ;; *************** function _ISR *****************
  1270 ;; Defined at:
  1271 ;;		line 23 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  index           1    8[COMMON] unsigned char 
  1276 ;;  checksum        1    7[COMMON] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         2       0       0       0       0
  1288 ;;      Temps:          5       0       0       0       0
  1289 ;;      Totals:         7       0       0       0       0
  1290 ;;Total ram usage:        7 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    1
  1293 ;; This function calls:
  1294 ;;		_USART_WriteChar
  1295 ;;		i1_TIMER1_Set
  1296 ;; This function is called by:
  1297 ;;		Interrupt level 1
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           
  1302                           ;psect for function _ISR
  1303  00C6                     _ISR:	
  1304                           
  1305                           ;main.c: 26: if(PIR1bits.TMR1IF)
  1306  00C6  1C0C               	btfss	12,0	;volatile
  1307  00C7  292F               	goto	i1l54
  1308                           
  1309                           ;main.c: 27: {
  1310                           ;main.c: 28: PIR1bits.TMR1IF = 0;
  1311  00C8  100C               	bcf	12,0	;volatile
  1312                           
  1313                           ;main.c: 30: TIMER1_Set(42496);
  1314  00C9  3000               	movlw	0
  1315  00CA  00F0               	movwf	i1TIMER1_Set@count
  1316  00CB  30A6               	movlw	166
  1317  00CC  00F1               	movwf	i1TIMER1_Set@count+1
  1318  00CD  120A  118A  2239  120A  118A  	fcall	i1_TIMER1_Set
  1319                           
  1320                           ;main.c: 52: HIGH = (CODIGO >> 8);
  1321  00D2  087A               	movf	_CODIGO+1,w
  1322  00D3  00F2               	movwf	??_ISR
  1323  00D4  0872               	movf	??_ISR,w
  1324  00D5  00FC               	movwf	_HIGH
  1325                           
  1326                           ;main.c: 53: LOW = CODIGO;
  1327  00D6  0879               	movf	_CODIGO,w
  1328  00D7  00F2               	movwf	??_ISR
  1329  00D8  0872               	movf	??_ISR,w
  1330  00D9  00FB               	movwf	_LOW
  1331                           
  1332                           ;main.c: 55: if (CODIGO < 1023)
  1333  00DA  3003               	movlw	3
  1334  00DB  027A               	subwf	_CODIGO+1,w
  1335  00DC  30FF               	movlw	255
  1336  00DD  1903               	skipnz
  1337  00DE  0279               	subwf	_CODIGO,w
  1338  00DF  1803               	skipnc
  1339  00E0  28E8               	goto	i1l941
  1340                           
  1341                           ;main.c: 56: CODIGO++;
  1342  00E1  3001               	movlw	1
  1343  00E2  07F9               	addwf	_CODIGO,f
  1344  00E3  1803               	skipnc
  1345  00E4  0AFA               	incf	_CODIGO+1,f
  1346  00E5  3000               	movlw	0
  1347  00E6  07FA               	addwf	_CODIGO+1,f
  1348  00E7  28EA               	goto	i1l943
  1349  00E8                     i1l941:	
  1350                           
  1351                           ;main.c: 57: else
  1352                           ;main.c: 58: CODIGO = 0;
  1353  00E8  01F9               	clrf	_CODIGO
  1354  00E9  01FA               	clrf	_CODIGO+1
  1355  00EA                     i1l943:	
  1356                           
  1357                           ;main.c: 60: ADC_Buffer[0] = HIGH;
  1358  00EA  087C               	movf	_HIGH,w
  1359  00EB  00F2               	movwf	??_ISR
  1360  00EC  0872               	movf	??_ISR,w
  1361  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1362  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1363  00EF  00C1               	movwf	_ADC_Buffer
  1364                           
  1365                           ;main.c: 61: ADC_Buffer[1] = LOW;
  1366  00F0  087B               	movf	_LOW,w
  1367  00F1  00F2               	movwf	??_ISR
  1368  00F2  0872               	movf	??_ISR,w
  1369  00F3  00C2               	movwf	_ADC_Buffer+1
  1370                           
  1371                           ;main.c: 95: USART_WriteChar('@');
  1372  00F4  3040               	movlw	64
  1373  00F5  120A  118A  222A  120A  118A  	fcall	_USART_WriteChar
  1374                           
  1375                           ;main.c: 96: USART_WriteChar('#');
  1376  00FA  3023               	movlw	35
  1377  00FB  120A  118A  222A  120A  118A  	fcall	_USART_WriteChar
  1378                           
  1379                           ;main.c: 97: USART_WriteChar('$');
  1380  0100  3024               	movlw	36
  1381  0101  120A  118A  222A  120A  118A  	fcall	_USART_WriteChar
  1382                           
  1383                           ;main.c: 98: unsigned char checksum = 0x50;
  1384  0106  3050               	movlw	80
  1385  0107  00F2               	movwf	??_ISR
  1386  0108  0872               	movf	??_ISR,w
  1387  0109  00F7               	movwf	ISR@checksum
  1388                           
  1389                           ;main.c: 99: for(unsigned char index = 0; index <= 1; index++)
  1390  010A  01F8               	clrf	ISR@index
  1391  010B  3002               	movlw	2
  1392  010C  0278               	subwf	ISR@index,w
  1393  010D  1803               	btfsc	3,0
  1394  010E  2929               	goto	i1l969
  1395  010F                     i1l961:	
  1396                           
  1397                           ;main.c: 100: {
  1398                           ;main.c: 101: USART_WriteChar(ADC_Buffer[index]);
  1399  010F  0878               	movf	ISR@index,w
  1400  0110  3E41               	addlw	(low (_ADC_Buffer| 0))& (0+255)
  1401  0111  0084               	movwf	4
  1402  0112  1383               	bcf	3,7	;select IRP bank0
  1403  0113  0800               	movf	0,w
  1404  0114  120A  118A  222A  120A  118A  	fcall	_USART_WriteChar
  1405                           
  1406                           ;main.c: 102: checksum ^= ADC_Buffer[index];
  1407  0119  0878               	movf	ISR@index,w
  1408  011A  3E41               	addlw	(low (_ADC_Buffer| 0))& (0+255)
  1409  011B  0084               	movwf	4
  1410  011C  1383               	bcf	3,7	;select IRP bank0
  1411  011D  0800               	movf	0,w
  1412  011E  00F2               	movwf	??_ISR
  1413  011F  0872               	movf	??_ISR,w
  1414  0120  06F7               	xorwf	ISR@checksum,f
  1415  0121  3001               	movlw	1
  1416  0122  00F2               	movwf	??_ISR
  1417  0123  0872               	movf	??_ISR,w
  1418  0124  07F8               	addwf	ISR@index,f
  1419  0125  3002               	movlw	2
  1420  0126  0278               	subwf	ISR@index,w
  1421  0127  1C03               	skipc
  1422  0128  290F               	goto	i1l961
  1423  0129                     i1l969:	
  1424                           
  1425                           ;main.c: 103: }
  1426                           ;main.c: 105: USART_WriteChar(checksum);
  1427  0129  0877               	movf	ISR@checksum,w
  1428  012A  120A  118A  222A  120A  118A  	fcall	_USART_WriteChar
  1429  012F                     i1l54:	
  1430  012F  0876               	movf	??_ISR+4,w
  1431  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0132  00FF               	movwf	127
  1434  0133  0875               	movf	??_ISR+3,w
  1435  0134  008A               	movwf	10
  1436  0135  0874               	movf	??_ISR+2,w
  1437  0136  0084               	movwf	4
  1438  0137  0E73               	swapf	(??_ISR+1)^(0+-128),w
  1439  0138  0083               	movwf	3
  1440  0139  0EFE               	swapf	126,f
  1441  013A  0E7E               	swapf	126,w
  1442  013B  0009               	retfie
  1443  013C                     __end_of_ISR:	
  1444                           
  1445                           	psect	intentry
  1446  0004                     __pintentry:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1449                           
  1450  0004                     interrupt_function:	
  1451  007E                     saved_w	set	btemp
  1452  0004  00FE               	movwf	btemp
  1453  0005  0E03               	swapf	3,w
  1454  0006  00F3               	movwf	??_ISR+1
  1455  0007  0804               	movf	4,w
  1456  0008  00F4               	movwf	??_ISR+2
  1457  0009  080A               	movf	10,w
  1458  000A  00F5               	movwf	??_ISR+3
  1459  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1460  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1461  000D  087F               	movf	btemp+1,w
  1462  000E  00F6               	movwf	??_ISR+4
  1463  000F  120A  118A  28C6   	ljmp	_ISR
  1464                           
  1465                           	psect	text7
  1466  0239                     __ptext7:	
  1467 ;; *************** function i1_TIMER1_Set *****************
  1468 ;; Defined at:
  1469 ;;		line 36 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\timers.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  count           2    0[COMMON] unsigned int 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         2       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0
  1486 ;;      Totals:         2       0       0       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_ISR
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function i1_TIMER1_Set
  1498  0239                     i1_TIMER1_Set:	
  1499                           
  1500                           ;timers.c: 38: TMR1 = count;
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in i1_TIMER1_Set: [wreg]
  1504  0239  0871               	movf	i1TIMER1_Set@count+1,w
  1505  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1506  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1507  023C  008F               	movwf	15	;volatile
  1508  023D  0870               	movf	i1TIMER1_Set@count,w
  1509  023E  008E               	movwf	14	;volatile
  1510  023F  0008               	return
  1511  0240                     __end_ofi1_TIMER1_Set:	
  1512                           
  1513                           	psect	text8
  1514  022A                     __ptext8:	
  1515 ;; *************** function _USART_WriteChar *****************
  1516 ;; Defined at:
  1517 ;;		line 42 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\usart.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  USART_Data      1    wreg     unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  USART_Data      1    0[COMMON] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       0       0       0       0
  1532 ;;      Locals:         1       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0
  1534 ;;      Totals:         1       0       0       0       0
  1535 ;;Total ram usage:        1 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_ISR
  1541 ;;		_USART_WriteString
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _USART_WriteChar
  1547  022A                     _USART_WriteChar:	
  1548                           
  1549                           ;incstack = 0
  1550                           ; Regs used in _USART_WriteChar: [wreg]
  1551                           ;USART_WriteChar@USART_Data stored from wreg
  1552  022A  00F0               	movwf	USART_WriteChar@USART_Data
  1553  022B                     i1l86:	
  1554                           ;usart.c: 44: while(!PIR1bits.TXIF);
  1555                           
  1556  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1557  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1558  022D  1E0C               	btfss	12,4	;volatile
  1559  022E  2A2B               	goto	i1l86
  1560                           
  1561                           ;usart.c: 45: TXREG = USART_Data;
  1562  022F  0870               	movf	USART_WriteChar@USART_Data,w
  1563  0230  0099               	movwf	25	;volatile
  1564  0231  0008               	return
  1565  0232                     __end_of_USART_WriteChar:	
  1566  007E                     btemp	set	126	;btemp
  1567  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    0
    Data        8
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     25      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_TIMER1_Set

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     722
                           _ADC_Init
                        _TIMER1_Init
                         _TIMER1_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          10     6      4     574
                                             15 BANK0     10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Set                                           2     0      2     148
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0     184
                                              2 COMMON     7     7      0
                    _USART_WriteChar
                       i1_TIMER1_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER1_Set                                         2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _TIMER1_Init
   _TIMER1_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _USART_WriteChar
   i1_TIMER1_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      3C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Aug 27 15:11:28 2020

                        _t 003D                          pc 0002                __CFG_CP$OFF 0000  
                       l59 01C1                         _pi 0047                         fsr 0004  
                      l278 0049                        l845 006A                        l837 005A  
                      l863 00BD                        l855 00A2                        l847 007A  
                      l859 00AF                        u235 006E                        u315 0148  
                      u255 007C                        u265 0091               __CFG_CPD$OFF 0000  
                      u275 00A3                        _ISR 00C6                        _LOW 007B  
                      fsr0 0004                        indf 0000               __CFG_FOSC$HS 0000  
             __CFG_LVP$OFF 0000                       ?_ISR 0070                       STR_1 01C8  
                     _HIGH 007C                       i1l54 012F                       i1l86 022B  
                     _OERR 00C1                       _TMR0 0001                       _TMR1 000E  
             __CFG_WRT$OFF 0000                       _main 0186                       btemp 007E  
         __end_of_ADC_Init 0202                       start 0012    __end_of_USART_WriteChar 0232  
                    ??_ISR 0072                ?_TIMER1_Set 0020            __end_of___aldiv 00C6  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      i1l941 00E8  
                    i1l943 00EA                      i1l961 010F                      i1l969 0129  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TXREG 0019  
             USART_Init@BR 0038                      _valor 0039             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
              ?_USART_Init 002F            __initialization 0015               __end_of_main 01C2  
        i1TIMER1_Set@count 0070                     ??_main 0039               ?_TIMER1_Init 0070  
                   _CODIGO 0079        __size_of_TIMER1_Set 0007             __CFG_PWRTE$OFF 0000  
                ??___aldiv 0028           ?_USART_WriteChar 0070                  ?_ADC_Init 0070  
                   saved_w 007E        __size_of_USART_Init 004A              ?i1_TIMER1_Set 0070  
  __end_of__initialization 0033             __pcstackCOMMON 0070                ISR@checksum 0077  
             __pidataBANK0 0222             _OPTION_REGbits 0081                 ??_ADC_Init 0020  
           ??i1_TIMER1_Set 0072                 __pbssBANK0 0039                 __pmaintext 0186  
               __pintentry 0004               ??_TIMER1_Set 0022       __size_of_TIMER1_Init 000F  
               __stringtab 01C2         __end_of_TIMER1_Set 0239               ??_USART_Init 0033  
                  ___aldiv 0037                    __ptext1 013C                    __ptext2 0037  
                  __ptext3 0232                    __ptext4 0213                    __ptext5 01F0  
                  __ptext6 00C6                    __ptext7 0239                    __ptext8 022A  
             __size_of_ISR 0076                  _T1CONbits 0010           ___aldiv@dividend 0024  
       __end_of_USART_Init 0186       end_of_initialization 0033                  _RCSTAbits 0018  
         ___aldiv@quotient 002B       __end_ofi1_TIMER1_Set 0240          __size_of_ADC_Init 0012  
                _TXSTAbits 0098            TIMER1_Set@count 0020   __size_of_USART_WriteChar 0008  
      start_initialization 0015                __end_of_ISR 013C                 init_fetch0 0202  
              __pdataBANK0 0047                __pbssCOMMON 0079                  ___latbits 0002  
            __pcstackBANK0 0020                   ISR@index 0078      __size_ofi1_TIMER1_Set 0007  
                 ?___aldiv 0020                  __pstrings 01C2              ??_TIMER1_Init 0020  
       USART_Init@BaudRate 002F                   _ADC_Init 01F0          ??_USART_WriteChar 0070  
             i1_TIMER1_Set 0239            ___aldiv@divisor 0020          interrupt_function 0004  
          ___aldiv@counter 0029                   _PIE1bits 008C                   _PIR1bits 000C  
                _tipoSinal 0045                 _ADCON0bits 001F                __stringbase 01C7  
               _ADCON1bits 009F        __end_of_TIMER1_Init 0222                 _ADC_Buffer 0041  
         __size_of___aldiv 008F         __end_of__stringtab 01C8              _tempo_periodo 004B  
            __size_of_main 003C                _TIMER1_Init 0213                 _INTCONbits 000B  
                 init_ram0 0206                   intlevel1 0000  USART_WriteChar@USART_Data 0070  
                stringcode 01C2                 _TIMER1_Set 0232            _USART_WriteChar 022A  
                 stringdir 01C2                   stringtab 01C2               ___aldiv@sign 002A  
               _USART_Init 013C  
