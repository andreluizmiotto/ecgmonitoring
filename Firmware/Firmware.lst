

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Jul 05 18:19:44 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.44
    26                           ; Generated 14/09/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299                           
   300                           	psect	idataBANK0
   301  0260                     __pidataBANK0:	
   302                           
   303                           ;initializer for _pi
   304  0260  34DB               	retlw	219
   305  0261  340F               	retlw	15
   306  0262  3449               	retlw	73
   307  0263  3440               	retlw	64
   308                           
   309                           ;initializer for _tempo_periodo
   310  0264  346F               	retlw	111
   311  0265  3412               	retlw	18
   312  0266  3403               	retlw	3
   313  0267  343B               	retlw	59
   314  000E                     _TMR1	set	14
   315  0010                     _T1CONbits	set	16
   316  0001                     _TMR0	set	1
   317  001F                     _ADCON0bits	set	31
   318  001A                     _RCREG	set	26
   319  0019                     _TXREG	set	25
   320  0018                     _RCSTAbits	set	24
   321  000B                     _INTCONbits	set	11
   322  0007                     _PORTC	set	7
   323  0006                     _PORTB	set	6
   324  0005                     _PORTA	set	5
   325  000C                     _PIR1bits	set	12
   326  00C1                     _OERR	set	193
   327  0081                     _OPTION_REGbits	set	129
   328  009F                     _ADCON1bits	set	159
   329  008C                     _PIE1bits	set	140
   330  0098                     _TXSTAbits	set	152
   331  0099                     _SPBRG	set	153
   332  0087                     _TRISC	set	135
   333  0086                     _TRISB	set	134
   334  0085                     _TRISA	set	133
   335                           
   336                           	psect	strings
   337  0200                     __pstrings:	
   338  0200                     stringtab:	
   339  0200                     __stringtab:	
   340  0200                     stringcode:	
   341                           ;	String table - string pointers are 1 byte each
   342                           
   343  0200                     stringdir:	
   344  0200  3002               	movlw	high stringdir
   345  0201  008A               	movwf	10
   346  0202  0804               	movf	4,w
   347  0203  0A84               	incf	4,f
   348  0204  0782               	addwf	2,f
   349  0205                     __stringbase:	
   350  0205  3400               	retlw	0
   351  0206                     __end_of__stringtab:	
   352  0206                     STR_1:	
   353  0206  340A               	retlw	10
   354  0207  340D               	retlw	13
   355  0208  3420               	retlw	32	;' '
   356  0209  342D               	retlw	45	;'-'
   357  020A  342D               	retlw	45	;'-'
   358  020B  342D               	retlw	45	;'-'
   359  020C  342D               	retlw	45	;'-'
   360  020D  342D               	retlw	45	;'-'
   361  020E  342D               	retlw	45	;'-'
   362  020F  342D               	retlw	45	;'-'
   363  0210  3420               	retlw	32	;' '
   364  0211  3445               	retlw	69	;'E'
   365  0212  3453               	retlw	83	;'S'
   366  0213  3454               	retlw	84	;'T'
   367  0214  344F               	retlw	79	;'O'
   368  0215  3455               	retlw	85	;'U'
   369  0216  3452               	retlw	82	;'R'
   370  0217  344F               	retlw	79	;'O'
   371  0218  3420               	retlw	32	;' '
   372  0219  3444               	retlw	68	;'D'
   373  021A  3445               	retlw	69	;'E'
   374  021B  3420               	retlw	32	;' '
   375  021C  3450               	retlw	80	;'P'
   376  021D  3449               	retlw	73	;'I'
   377  021E  344C               	retlw	76	;'L'
   378  021F  3448               	retlw	72	;'H'
   379  0220  3441               	retlw	65	;'A'
   380  0221  3420               	retlw	32	;' '
   381  0222  342D               	retlw	45	;'-'
   382  0223  342D               	retlw	45	;'-'
   383  0224  342D               	retlw	45	;'-'
   384  0225  342D               	retlw	45	;'-'
   385  0226  342D               	retlw	45	;'-'
   386  0227  342D               	retlw	45	;'-'
   387  0228  342D               	retlw	45	;'-'
   388  0229  3420               	retlw	32	;' '
   389  022A  340A               	retlw	10
   390  022B  340D               	retlw	13
   391  022C  3420               	retlw	32	;' '
   392  022D  3400               	retlw	0
   393                           
   394                           ; #config settings
   395  0000                     
   396                           	psect	cinit
   397  0015                     start_initialization:	
   398  0015                     __initialization:	
   399                           
   400                           ; Initialize objects allocated to BANK0
   401  0015  1383               	bcf	3,7	;select IRP bank0
   402  0016  304F               	movlw	low (__pdataBANK0+8)
   403  0017  00FD               	movwf	btemp+-1
   404  0018  3002               	movlw	high __pidataBANK0
   405  0019  00FE               	movwf	btemp
   406  001A  3060               	movlw	low __pidataBANK0
   407  001B  00FF               	movwf	btemp+1
   408  001C  3047               	movlw	low __pdataBANK0
   409  001D  0084               	movwf	4
   410  001E  120A  118A  2244   	fcall	init_ram0
   411                           
   412                           ; Clear objects allocated to BANK0
   413  0021  01B9               	clrf	__pbssBANK0& (0+127)
   414  0022  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   415  0023  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   416  0024  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   417  0025  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   418  0026  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   419  0027  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   420  0028  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   421  0029  01C1               	clrf	(__pbssBANK0+8)& (0+127)
   422  002A  01C2               	clrf	(__pbssBANK0+9)& (0+127)
   423  002B  01C3               	clrf	(__pbssBANK0+10)& (0+127)
   424  002C  01C4               	clrf	(__pbssBANK0+11)& (0+127)
   425  002D  01C5               	clrf	(__pbssBANK0+12)& (0+127)
   426  002E  01C6               	clrf	(__pbssBANK0+13)& (0+127)
   427                           
   428                           ; Clear objects allocated to COMMON
   429  002F  01F9               	clrf	__pbssCOMMON& (0+127)
   430  0030  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   431  0031  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   432  0032  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   433  0033                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  0033                     __end_of__initialization:	
   437  0033  0183               	clrf	3
   438  0034  120A  118A  29A6   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	bssCOMMON
   441  0079                     __pbssCOMMON:	
   442  0079                     _CODIGO:	
   443  0079                     	ds	2
   444  007B                     _LOW:	
   445  007B                     	ds	1
   446  007C                     _HIGH:	
   447  007C                     	ds	1
   448                           
   449                           	psect	bssBANK0
   450  0039                     __pbssBANK0:	
   451  0039                     _valor:	
   452  0039                     	ds	4
   453  003D                     _t:	
   454  003D                     	ds	4
   455  0041                     _ADC_Buffer:	
   456  0041                     	ds	4
   457  0045                     _tipoSinal:	
   458  0045                     	ds	2
   459                           
   460                           	psect	dataBANK0
   461  0047                     __pdataBANK0:	
   462  0047                     _pi:	
   463  0047                     	ds	4
   464  004B                     _tempo_periodo:	
   465  004B                     	ds	4
   466                           
   467                           	psect	inittext
   468  0240                     init_fetch0:	
   469                           ;	Called with low address in FSR and high address in W
   470                           
   471  0240  087E               	movf	126,w
   472  0241  008A               	movwf	10
   473  0242  087F               	movf	127,w
   474  0243  0082               	movwf	2
   475  0244                     init_ram0:	
   476                           ;Called with:
   477                           ;	high address of idata address in btemp 
   478                           ;	low address of idata address in btemp+1 
   479                           ;	low address of data in FSR
   480                           ;	high address + 1 of data in btemp-1
   481                           
   482  0244  2240  120A  118A   	fcall	init_fetch0
   483  0247  0080               	movwf	0
   484  0248  0A84               	incf	4,f
   485  0249  0804               	movf	4,w
   486  024A  067D               	xorwf	125,w
   487  024B  1903               	btfsc	3,2
   488  024C  3400               	retlw	0
   489  024D  0AFF               	incf	127,f
   490  024E  1903               	btfsc	3,2
   491  024F  0AFE               	incf	126,f
   492  0250  2A44               	goto	init_ram0
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:	
   496  0070                     ?_USART_WriteChar:	
   497  0070                     ??_USART_WriteChar:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_TIMER1_Init:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_ADC_Init:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_ISR:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?i1_TIMER1_Set:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     USART_WriteChar@USART_Data:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     i1TIMER1_Set@count:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 2 bytes @ 0x0
   523  0070                     	ds	2
   524  0072                     ??_ISR:	
   525  0072                     ??i1_TIMER1_Set:	
   526                           ; 1 bytes @ 0x2
   527                           
   528                           
   529                           ; 1 bytes @ 0x2
   530  0072                     	ds	5
   531  0077                     ISR@checksum:	
   532                           
   533                           ; 1 bytes @ 0x7
   534  0077                     	ds	1
   535  0078                     ISR@index:	
   536                           
   537                           ; 1 bytes @ 0x8
   538  0078                     	ds	1
   539                           
   540                           	psect	cstackBANK0
   541  0020                     __pcstackBANK0:	
   542  0020                     ?_TIMER1_Set:	
   543  0020                     ??_TIMER1_Init:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0020                     ??_ADC_Init:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0020                     ?___aldiv:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0020                     TIMER1_Set@count:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0020                     ___aldiv@divisor:	
   556                           ; 2 bytes @ 0x0
   557                           
   558                           
   559                           ; 4 bytes @ 0x0
   560  0020                     	ds	2
   561  0022                     ??_TIMER1_Set:	
   562                           
   563                           ; 1 bytes @ 0x2
   564  0022                     	ds	2
   565  0024                     ___aldiv@dividend:	
   566                           
   567                           ; 4 bytes @ 0x4
   568  0024                     	ds	4
   569  0028                     ??___aldiv:	
   570                           
   571                           ; 1 bytes @ 0x8
   572  0028                     	ds	1
   573  0029                     ___aldiv@counter:	
   574                           
   575                           ; 1 bytes @ 0x9
   576  0029                     	ds	1
   577  002A                     ___aldiv@sign:	
   578                           
   579                           ; 1 bytes @ 0xA
   580  002A                     	ds	1
   581  002B                     ___aldiv@quotient:	
   582                           
   583                           ; 4 bytes @ 0xB
   584  002B                     	ds	4
   585  002F                     ?_USART_Init:	
   586  002F                     USART_Init@BaudRate:	
   587                           ; 1 bytes @ 0xF
   588                           
   589                           
   590                           ; 4 bytes @ 0xF
   591  002F                     	ds	4
   592  0033                     ??_USART_Init:	
   593                           
   594                           ; 1 bytes @ 0x13
   595  0033                     	ds	5
   596  0038                     USART_Init@BR:	
   597                           
   598                           ; 1 bytes @ 0x18
   599  0038                     	ds	1
   600  0039                     ??_main:	
   601                           
   602                           	psect	maintext
   603  01A6                     __pmaintext:	
   604                           ; 1 bytes @ 0x19
   605 ;;
   606 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   607 ;;
   608 ;; *************** function _main *****************
   609 ;; Defined at:
   610 ;;		line 108 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\main.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : B00/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels required when called:    4
   630 ;; This function calls:
   631 ;;		_ADC_Init
   632 ;;		_TIMER1_Init
   633 ;;		_TIMER1_Set
   634 ;;		_USART_Init
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _main
   642  01A6                     _main:	
   643                           
   644                           ;main.c: 111: TRISA = 0b00000011;
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   648  01A6  3003               	movlw	3
   649  01A7  1683               	bsf	3,5	;RP0=1, select bank1
   650  01A8  1303               	bcf	3,6	;RP1=0, select bank1
   651  01A9  0085               	movwf	5	;volatile
   652                           
   653                           ;main.c: 112: PORTA = 0b00000011;
   654  01AA  3003               	movlw	3
   655  01AB  1283               	bcf	3,5	;RP0=0, select bank0
   656  01AC  1303               	bcf	3,6	;RP1=0, select bank0
   657  01AD  0085               	movwf	5	;volatile
   658                           
   659                           ;main.c: 113: TRISB = 0b00000000;
   660  01AE  1683               	bsf	3,5	;RP0=1, select bank1
   661  01AF  1303               	bcf	3,6	;RP1=0, select bank1
   662  01B0  0186               	clrf	6	;volatile
   663                           
   664                           ;main.c: 114: PORTB = 0b00000000;
   665  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   666  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   667  01B3  0186               	clrf	6	;volatile
   668                           
   669                           ;main.c: 115: TRISC = 0b10000000;
   670  01B4  3080               	movlw	128
   671  01B5  1683               	bsf	3,5	;RP0=1, select bank1
   672  01B6  1303               	bcf	3,6	;RP1=0, select bank1
   673  01B7  0087               	movwf	7	;volatile
   674                           
   675                           ;main.c: 116: PORTC = 0b11000000;
   676  01B8  30C0               	movlw	192
   677  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   678  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   679  01BB  0087               	movwf	7	;volatile
   680                           
   681                           ;main.c: 119: USART_Init(115200);
   682  01BC  3000               	movlw	0
   683  01BD  00B2               	movwf	USART_Init@BaudRate+3
   684  01BE  3001               	movlw	1
   685  01BF  00B1               	movwf	USART_Init@BaudRate+2
   686  01C0  30C2               	movlw	194
   687  01C1  00B0               	movwf	USART_Init@BaudRate+1
   688  01C2  3000               	movlw	0
   689  01C3  00AF               	movwf	USART_Init@BaudRate
   690  01C4  120A  118A  215C  120A  118A  	fcall	_USART_Init
   691                           
   692                           ;main.c: 120: TIMER1_Init();
   693  01C9  120A  118A  2251  120A  118A  	fcall	_TIMER1_Init
   694                           
   695                           ;main.c: 121: ADC_Init();
   696  01CE  120A  118A  222E  120A  118A  	fcall	_ADC_Init
   697                           
   698                           ;main.c: 124: TIMER1_Set(54016);
   699  01D3  3000               	movlw	0
   700  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   701  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   702  01D6  00A0               	movwf	TIMER1_Set@count
   703  01D7  30D3               	movlw	211
   704  01D8  00A1               	movwf	TIMER1_Set@count+1
   705  01D9  120A  118A  2270  120A  118A  	fcall	_TIMER1_Set
   706                           
   707                           ;main.c: 127: INTCONbits.PEIE = 1;
   708  01DE  170B               	bsf	11,6	;volatile
   709                           
   710                           ;main.c: 128: INTCONbits.GIE = 1;
   711  01DF  178B               	bsf	11,7	;volatile
   712  01E0                     l61:	
   713                           ;main.c: 130: while(1)
   714                           
   715                           
   716                           ;main.c: 131: {
   717  01E0  29E0               	goto	l61
   718  01E1                     __end_of_main:	
   719                           
   720                           	psect	text1
   721  015C                     __ptext1:	
   722 ;; *************** function _USART_Init *****************
   723 ;; Defined at:
   724 ;;		line 6 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\usart.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  BaudRate        4   15[BANK0 ] long 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  BR              1   24[BANK0 ] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0, pclath, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       4       0       0       0
   739 ;;      Locals:         0       1       0       0       0
   740 ;;      Temps:          0       5       0       0       0
   741 ;;      Totals:         0      10       0       0       0
   742 ;;Total ram usage:       10 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    3
   745 ;; This function calls:
   746 ;;		___aldiv
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _USART_Init
   754  015C                     _USART_Init:	
   755                           
   756                           ;usart.c: 12: unsigned char BR = 0;
   757                           
   758                           ;incstack = 0
   759                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
   760  015C  1283               	bcf	3,5	;RP0=0, select bank0
   761  015D  1303               	bcf	3,6	;RP1=0, select bank0
   762  015E  01B8               	clrf	USART_Init@BR
   763                           
   764                           ;usart.c: 15: BR = (18432000 / (16 * BaudRate)) - 1;
   765  015F  082F               	movf	USART_Init@BaudRate,w
   766  0160  00B3               	movwf	??_USART_Init
   767  0161  0830               	movf	USART_Init@BaudRate+1,w
   768  0162  00B4               	movwf	??_USART_Init+1
   769  0163  0831               	movf	USART_Init@BaudRate+2,w
   770  0164  00B5               	movwf	??_USART_Init+2
   771  0165  0832               	movf	USART_Init@BaudRate+3,w
   772  0166  00B6               	movwf	??_USART_Init+3
   773  0167  3004               	movlw	4
   774  0168                     u325:	
   775  0168  1003               	clrc
   776  0169  0DB3               	rlf	??_USART_Init,f
   777  016A  0DB4               	rlf	??_USART_Init+1,f
   778  016B  0DB5               	rlf	??_USART_Init+2,f
   779  016C  0DB6               	rlf	??_USART_Init+3,f
   780  016D  3EFF               	addlw	-1
   781  016E  1D03               	skipz
   782  016F  2968               	goto	u325
   783  0170  0836               	movf	??_USART_Init+3,w
   784  0171  00A3               	movwf	___aldiv@divisor+3
   785  0172  0835               	movf	??_USART_Init+2,w
   786  0173  00A2               	movwf	___aldiv@divisor+2
   787  0174  0834               	movf	??_USART_Init+1,w
   788  0175  00A1               	movwf	___aldiv@divisor+1
   789  0176  0833               	movf	??_USART_Init,w
   790  0177  00A0               	movwf	___aldiv@divisor
   791  0178  3001               	movlw	1
   792  0179  00A7               	movwf	___aldiv@dividend+3
   793  017A  3019               	movlw	25
   794  017B  00A6               	movwf	___aldiv@dividend+2
   795  017C  3040               	movlw	64
   796  017D  00A5               	movwf	___aldiv@dividend+1
   797  017E  3000               	movlw	0
   798  017F  00A4               	movwf	___aldiv@dividend
   799  0180  120A  118A  20CD   	fcall	___aldiv
   800  0183  1283               	bcf	3,5	;RP0=0, select bank0
   801  0184  1303               	bcf	3,6	;RP1=0, select bank0
   802  0185  0820               	movf	?___aldiv,w
   803  0186  3EFF               	addlw	255
   804  0187  00B7               	movwf	??_USART_Init+4
   805  0188  0837               	movf	??_USART_Init+4,w
   806  0189  00B8               	movwf	USART_Init@BR
   807                           
   808                           ;usart.c: 16: SPBRG = BR;
   809  018A  0838               	movf	USART_Init@BR,w
   810  018B  1683               	bsf	3,5	;RP0=1, select bank1
   811  018C  1303               	bcf	3,6	;RP1=0, select bank1
   812  018D  0099               	movwf	25	;volatile
   813                           
   814                           ;usart.c: 19: TXSTAbits.CSRC = 0;
   815  018E  1398               	bcf	24,7	;volatile
   816                           
   817                           ;usart.c: 20: TXSTAbits.TX9 = 0;
   818  018F  1318               	bcf	24,6	;volatile
   819                           
   820                           ;usart.c: 21: TXSTAbits.TXEN = 1;
   821  0190  1698               	bsf	24,5	;volatile
   822                           
   823                           ;usart.c: 22: TXSTAbits.SYNC = 0;
   824  0191  1218               	bcf	24,4	;volatile
   825                           
   826                           ;usart.c: 23: TXSTAbits.BRGH = 1;
   827  0192  1518               	bsf	24,2	;volatile
   828                           
   829                           ;usart.c: 24: TXSTAbits.TRMT = 1;
   830  0193  1498               	bsf	24,1	;volatile
   831                           
   832                           ;usart.c: 25: TXSTAbits.TX9D = 0;
   833  0194  1018               	bcf	24,0	;volatile
   834                           
   835                           ;usart.c: 28: RCSTAbits.SPEN = 1;
   836  0195  1283               	bcf	3,5	;RP0=0, select bank0
   837  0196  1303               	bcf	3,6	;RP1=0, select bank0
   838  0197  1798               	bsf	24,7	;volatile
   839                           
   840                           ;usart.c: 29: RCSTAbits.RX9 = 0;
   841  0198  1318               	bcf	24,6	;volatile
   842                           
   843                           ;usart.c: 30: RCSTAbits.SREN = 0;
   844  0199  1298               	bcf	24,5	;volatile
   845                           
   846                           ;usart.c: 31: RCSTAbits.CREN = 1;
   847  019A  1618               	bsf	24,4	;volatile
   848                           
   849                           ;usart.c: 32: RCSTAbits.ADDEN = 0;
   850  019B  1198               	bcf	24,3	;volatile
   851                           
   852                           ;usart.c: 33: RCSTAbits.FERR = 0;
   853  019C  1118               	bcf	24,2	;volatile
   854                           
   855                           ;usart.c: 34: RCSTAbits.OERR = 0;
   856  019D  1098               	bcf	24,1	;volatile
   857                           
   858                           ;usart.c: 35: RCSTAbits.RX9D = 0;
   859  019E  1018               	bcf	24,0	;volatile
   860                           
   861                           ;usart.c: 38: PIE1bits.RCIE = 1;
   862  019F  1683               	bsf	3,5	;RP0=1, select bank1
   863  01A0  1303               	bcf	3,6	;RP1=0, select bank1
   864  01A1  168C               	bsf	12,5	;volatile
   865                           
   866                           ;usart.c: 39: PIR1bits.RCIF = 0;
   867  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   868  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   869  01A4  128C               	bcf	12,5	;volatile
   870  01A5  0008               	return
   871  01A6                     __end_of_USART_Init:	
   872                           
   873                           	psect	text2
   874  00CD                     __ptext2:	
   875 ;; *************** function ___aldiv *****************
   876 ;; Defined at:
   877 ;;		line 6 in file "E:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  divisor         4    0[BANK0 ] long 
   880 ;;  dividend        4    4[BANK0 ] long 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  quotient        4   11[BANK0 ] long 
   883 ;;  sign            1   10[BANK0 ] unsigned char 
   884 ;;  counter         1    9[BANK0 ] unsigned char 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  4    0[BANK0 ] long 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       8       0       0       0
   895 ;;      Locals:         0       6       0       0       0
   896 ;;      Temps:          0       1       0       0       0
   897 ;;      Totals:         0      15       0       0       0
   898 ;;Total ram usage:       15 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_USART_Init
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           
   909                           ;psect for function ___aldiv
   910  00CD                     ___aldiv:	
   911                           
   912                           ;incstack = 0
   913                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   914  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   915  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   916  00CF  01AA               	clrf	___aldiv@sign
   917  00D0  1FA3               	btfss	___aldiv@divisor+3,7
   918  00D1  28DF               	goto	l280
   919  00D2  09A0               	comf	___aldiv@divisor,f
   920  00D3  09A1               	comf	___aldiv@divisor+1,f
   921  00D4  09A2               	comf	___aldiv@divisor+2,f
   922  00D5  09A3               	comf	___aldiv@divisor+3,f
   923  00D6  0AA0               	incf	___aldiv@divisor,f
   924  00D7  1903               	skipnz
   925  00D8  0AA1               	incf	___aldiv@divisor+1,f
   926  00D9  1903               	skipnz
   927  00DA  0AA2               	incf	___aldiv@divisor+2,f
   928  00DB  1903               	skipnz
   929  00DC  0AA3               	incf	___aldiv@divisor+3,f
   930  00DD  01AA               	clrf	___aldiv@sign
   931  00DE  0AAA               	incf	___aldiv@sign,f
   932  00DF                     l280:	
   933  00DF  1FA7               	btfss	___aldiv@dividend+3,7
   934  00E0  28F0               	goto	l843
   935  00E1  09A4               	comf	___aldiv@dividend,f
   936  00E2  09A5               	comf	___aldiv@dividend+1,f
   937  00E3  09A6               	comf	___aldiv@dividend+2,f
   938  00E4  09A7               	comf	___aldiv@dividend+3,f
   939  00E5  0AA4               	incf	___aldiv@dividend,f
   940  00E6  1903               	skipnz
   941  00E7  0AA5               	incf	___aldiv@dividend+1,f
   942  00E8  1903               	skipnz
   943  00E9  0AA6               	incf	___aldiv@dividend+2,f
   944  00EA  1903               	skipnz
   945  00EB  0AA7               	incf	___aldiv@dividend+3,f
   946  00EC  3001               	movlw	1
   947  00ED  00A8               	movwf	??___aldiv
   948  00EE  0828               	movf	??___aldiv,w
   949  00EF  06AA               	xorwf	___aldiv@sign,f
   950  00F0                     l843:	
   951  00F0  3000               	movlw	0
   952  00F1  00AE               	movwf	___aldiv@quotient+3
   953  00F2  3000               	movlw	0
   954  00F3  00AD               	movwf	___aldiv@quotient+2
   955  00F4  3000               	movlw	0
   956  00F5  00AC               	movwf	___aldiv@quotient+1
   957  00F6  3000               	movlw	0
   958  00F7  00AB               	movwf	___aldiv@quotient
   959  00F8  0823               	movf	___aldiv@divisor+3,w
   960  00F9  0422               	iorwf	___aldiv@divisor+2,w
   961  00FA  0421               	iorwf	___aldiv@divisor+1,w
   962  00FB  0420               	iorwf	___aldiv@divisor,w
   963  00FC  1903               	skipnz
   964  00FD  2945               	goto	l865
   965  00FE  01A9               	clrf	___aldiv@counter
   966  00FF  0AA9               	incf	___aldiv@counter,f
   967  0100                     l851:	
   968  0100  1BA3               	btfsc	___aldiv@divisor+3,7
   969  0101  2910               	goto	l853
   970  0102  3001               	movlw	1
   971  0103  00A8               	movwf	??___aldiv
   972  0104                     u245:	
   973  0104  1003               	clrc
   974  0105  0DA0               	rlf	___aldiv@divisor,f
   975  0106  0DA1               	rlf	___aldiv@divisor+1,f
   976  0107  0DA2               	rlf	___aldiv@divisor+2,f
   977  0108  0DA3               	rlf	___aldiv@divisor+3,f
   978  0109  0BA8               	decfsz	??___aldiv,f
   979  010A  2904               	goto	u245
   980  010B  3001               	movlw	1
   981  010C  00A8               	movwf	??___aldiv
   982  010D  0828               	movf	??___aldiv,w
   983  010E  07A9               	addwf	___aldiv@counter,f
   984  010F  2900               	goto	l851
   985  0110                     l853:	
   986  0110  3001               	movlw	1
   987  0111  00A8               	movwf	??___aldiv
   988  0112                     u265:	
   989  0112  1003               	clrc
   990  0113  0DAB               	rlf	___aldiv@quotient,f
   991  0114  0DAC               	rlf	___aldiv@quotient+1,f
   992  0115  0DAD               	rlf	___aldiv@quotient+2,f
   993  0116  0DAE               	rlf	___aldiv@quotient+3,f
   994  0117  0BA8               	decfsz	??___aldiv,f
   995  0118  2912               	goto	u265
   996  0119  0823               	movf	___aldiv@divisor+3,w
   997  011A  0227               	subwf	___aldiv@dividend+3,w
   998  011B  1D03               	skipz
   999  011C  2927               	goto	u275
  1000  011D  0822               	movf	___aldiv@divisor+2,w
  1001  011E  0226               	subwf	___aldiv@dividend+2,w
  1002  011F  1D03               	skipz
  1003  0120  2927               	goto	u275
  1004  0121  0821               	movf	___aldiv@divisor+1,w
  1005  0122  0225               	subwf	___aldiv@dividend+1,w
  1006  0123  1D03               	skipz
  1007  0124  2927               	goto	u275
  1008  0125  0820               	movf	___aldiv@divisor,w
  1009  0126  0224               	subwf	___aldiv@dividend,w
  1010  0127                     u275:	
  1011  0127  1C03               	skipc
  1012  0128  2938               	goto	l861
  1013  0129  0820               	movf	___aldiv@divisor,w
  1014  012A  02A4               	subwf	___aldiv@dividend,f
  1015  012B  0821               	movf	___aldiv@divisor+1,w
  1016  012C  1C03               	skipc
  1017  012D  0F21               	incfsz	___aldiv@divisor+1,w
  1018  012E  02A5               	subwf	___aldiv@dividend+1,f
  1019  012F  0822               	movf	___aldiv@divisor+2,w
  1020  0130  1C03               	skipc
  1021  0131  0F22               	incfsz	___aldiv@divisor+2,w
  1022  0132  02A6               	subwf	___aldiv@dividend+2,f
  1023  0133  0823               	movf	___aldiv@divisor+3,w
  1024  0134  1C03               	skipc
  1025  0135  0F23               	incfsz	___aldiv@divisor+3,w
  1026  0136  02A7               	subwf	___aldiv@dividend+3,f
  1027  0137  142B               	bsf	___aldiv@quotient,0
  1028  0138                     l861:	
  1029  0138  3001               	movlw	1
  1030  0139                     u285:	
  1031  0139  1003               	clrc
  1032  013A  0CA3               	rrf	___aldiv@divisor+3,f
  1033  013B  0CA2               	rrf	___aldiv@divisor+2,f
  1034  013C  0CA1               	rrf	___aldiv@divisor+1,f
  1035  013D  0CA0               	rrf	___aldiv@divisor,f
  1036  013E  3EFF               	addlw	-1
  1037  013F  1D03               	skipz
  1038  0140  2939               	goto	u285
  1039  0141  3001               	movlw	1
  1040  0142  02A9               	subwf	___aldiv@counter,f
  1041  0143  1D03               	btfss	3,2
  1042  0144  2910               	goto	l853
  1043  0145                     l865:	
  1044  0145  082A               	movf	___aldiv@sign,w
  1045  0146  1903               	btfsc	3,2
  1046  0147  2953               	goto	l869
  1047  0148  09AB               	comf	___aldiv@quotient,f
  1048  0149  09AC               	comf	___aldiv@quotient+1,f
  1049  014A  09AD               	comf	___aldiv@quotient+2,f
  1050  014B  09AE               	comf	___aldiv@quotient+3,f
  1051  014C  0AAB               	incf	___aldiv@quotient,f
  1052  014D  1903               	skipnz
  1053  014E  0AAC               	incf	___aldiv@quotient+1,f
  1054  014F  1903               	skipnz
  1055  0150  0AAD               	incf	___aldiv@quotient+2,f
  1056  0151  1903               	skipnz
  1057  0152  0AAE               	incf	___aldiv@quotient+3,f
  1058  0153                     l869:	
  1059  0153  082E               	movf	___aldiv@quotient+3,w
  1060  0154  00A3               	movwf	?___aldiv+3
  1061  0155  082D               	movf	___aldiv@quotient+2,w
  1062  0156  00A2               	movwf	?___aldiv+2
  1063  0157  082C               	movf	___aldiv@quotient+1,w
  1064  0158  00A1               	movwf	?___aldiv+1
  1065  0159  082B               	movf	___aldiv@quotient,w
  1066  015A  00A0               	movwf	?___aldiv
  1067  015B  0008               	return
  1068  015C                     __end_of___aldiv:	
  1069                           
  1070                           	psect	text3
  1071  0270                     __ptext3:	
  1072 ;; *************** function _TIMER1_Set *****************
  1073 ;; Defined at:
  1074 ;;		line 36 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\timers.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  count           2    0[BANK0 ] unsigned int 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       2       0       0       0
  1089 ;;      Locals:         0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0
  1091 ;;      Totals:         0       2       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    2
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _TIMER1_Set
  1104  0270                     _TIMER1_Set:	
  1105                           
  1106                           ;timers.c: 38: TMR1 = count;
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _TIMER1_Set: [wreg]
  1110  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0272  0821               	movf	TIMER1_Set@count+1,w
  1113  0273  008F               	movwf	15	;volatile
  1114  0274  0820               	movf	TIMER1_Set@count,w
  1115  0275  008E               	movwf	14	;volatile
  1116  0276  0008               	return
  1117  0277                     __end_of_TIMER1_Set:	
  1118                           
  1119                           	psect	text4
  1120  0251                     __ptext4:	
  1121 ;; *************** function _TIMER1_Init *****************
  1122 ;; Defined at:
  1123 ;;		line 23 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\timers.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		None
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    2
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           
  1152                           ;psect for function _TIMER1_Init
  1153  0251                     _TIMER1_Init:	
  1154                           
  1155                           ;timers.c: 26: T1CONbits.T1CKPS1 = 0;
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _TIMER1_Init: []
  1159  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0253  1290               	bcf	16,5	;volatile
  1162                           
  1163                           ;timers.c: 27: T1CONbits.T1CKPS0 = 0;
  1164  0254  1210               	bcf	16,4	;volatile
  1165                           
  1166                           ;timers.c: 28: T1CONbits.T1OSCEN = 1;
  1167  0255  1590               	bsf	16,3	;volatile
  1168                           
  1169                           ;timers.c: 29: T1CONbits.nT1SYNC = 1;
  1170  0256  1510               	bsf	16,2	;volatile
  1171                           
  1172                           ;timers.c: 30: T1CONbits.TMR1CS = 0;
  1173  0257  1090               	bcf	16,1	;volatile
  1174                           
  1175                           ;timers.c: 31: T1CONbits.TMR1ON = 1;
  1176  0258  1410               	bsf	16,0	;volatile
  1177                           
  1178                           ;timers.c: 32: PIE1bits.TMR1IE = 1;
  1179  0259  1683               	bsf	3,5	;RP0=1, select bank1
  1180  025A  1303               	bcf	3,6	;RP1=0, select bank1
  1181  025B  140C               	bsf	12,0	;volatile
  1182                           
  1183                           ;timers.c: 33: PIR1bits.TMR1IF = 0;
  1184  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1185  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1186  025E  100C               	bcf	12,0	;volatile
  1187  025F  0008               	return
  1188  0260                     __end_of_TIMER1_Init:	
  1189                           
  1190                           	psect	text5
  1191  022E                     __ptext5:	
  1192 ;; *************** function _ADC_Init *****************
  1193 ;; Defined at:
  1194 ;;		line 6 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\adc.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		None
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1208 ;;      Params:         0       0       0       0       0
  1209 ;;      Locals:         0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0
  1211 ;;      Totals:         0       0       0       0       0
  1212 ;;Total ram usage:        0 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    2
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _ADC_Init
  1224  022E                     _ADC_Init:	
  1225                           
  1226                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _ADC_Init: []
  1230  022E  1683               	bsf	3,5	;RP0=1, select bank1
  1231  022F  1303               	bcf	3,6	;RP1=0, select bank1
  1232  0230  179F               	bsf	31,7	;volatile
  1233                           
  1234                           ;adc.c: 10: ADCON1bits.PCFG3 = 0;
  1235  0231  119F               	bcf	31,3	;volatile
  1236                           
  1237                           ;adc.c: 11: ADCON1bits.PCFG2 = 0;
  1238  0232  111F               	bcf	31,2	;volatile
  1239                           
  1240                           ;adc.c: 12: ADCON1bits.PCFG1 = 0;
  1241  0233  109F               	bcf	31,1	;volatile
  1242                           
  1243                           ;adc.c: 13: ADCON1bits.PCFG0 = 0;
  1244  0234  101F               	bcf	31,0	;volatile
  1245                           
  1246                           ;adc.c: 17: ADCON0bits.ADCS1 = 1;
  1247  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0237  179F               	bsf	31,7	;volatile
  1250                           
  1251                           ;adc.c: 18: ADCON0bits.ADCS0 = 0;
  1252  0238  131F               	bcf	31,6	;volatile
  1253                           
  1254                           ;adc.c: 21: PIE1bits.ADIE = 0;
  1255  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1256  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1257  023B  130C               	bcf	12,6	;volatile
  1258                           
  1259                           ;adc.c: 22: PIR1bits.ADIF = 0;
  1260  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1261  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1262  023E  130C               	bcf	12,6	;volatile
  1263  023F  0008               	return
  1264  0240                     __end_of_ADC_Init:	
  1265                           
  1266                           	psect	text6
  1267  0037                     __ptext6:	
  1268 ;; *************** function _ISR *****************
  1269 ;; Defined at:
  1270 ;;		line 23 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\main.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  index           1    8[COMMON] unsigned char 
  1275 ;;  checksum        1    7[COMMON] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         0       0       0       0       0
  1286 ;;      Locals:         2       0       0       0       0
  1287 ;;      Temps:          5       0       0       0       0
  1288 ;;      Totals:         7       0       0       0       0
  1289 ;;Total ram usage:        7 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    1
  1292 ;; This function calls:
  1293 ;;		_USART_WriteChar
  1294 ;;		i1_TIMER1_Set
  1295 ;; This function is called by:
  1296 ;;		Interrupt level 1
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _ISR
  1302  0037                     _ISR:	
  1303                           
  1304                           ;main.c: 26: if(PIR1bits.TMR1IF)
  1305  0037  1C0C               	btfss	12,0	;volatile
  1306  0038  28C0               	goto	i1l56
  1307                           
  1308                           ;main.c: 27: {
  1309                           ;main.c: 28: PIR1bits.TMR1IF = 0;
  1310  0039  100C               	bcf	12,0	;volatile
  1311                           
  1312                           ;main.c: 34: TIMER1_Set(54016);
  1313  003A  3000               	movlw	0
  1314  003B  00F0               	movwf	i1TIMER1_Set@count
  1315  003C  30D3               	movlw	211
  1316  003D  00F1               	movwf	i1TIMER1_Set@count+1
  1317  003E  120A  118A  2277  120A  118A  	fcall	i1_TIMER1_Set
  1318                           
  1319                           ;main.c: 51: HIGH = (CODIGO >> 8);
  1320  0043  087A               	movf	_CODIGO+1,w
  1321  0044  00F2               	movwf	??_ISR
  1322  0045  0872               	movf	??_ISR,w
  1323  0046  00FC               	movwf	_HIGH
  1324                           
  1325                           ;main.c: 52: LOW = CODIGO;
  1326  0047  0879               	movf	_CODIGO,w
  1327  0048  00F2               	movwf	??_ISR
  1328  0049  0872               	movf	??_ISR,w
  1329  004A  00FB               	movwf	_LOW
  1330                           
  1331                           ;main.c: 54: if (CODIGO < 1023)
  1332  004B  3003               	movlw	3
  1333  004C  027A               	subwf	_CODIGO+1,w
  1334  004D  30FF               	movlw	255
  1335  004E  1903               	skipnz
  1336  004F  0279               	subwf	_CODIGO,w
  1337  0050  1803               	skipnc
  1338  0051  2859               	goto	i1l947
  1339                           
  1340                           ;main.c: 55: CODIGO++;
  1341  0052  3001               	movlw	1
  1342  0053  07F9               	addwf	_CODIGO,f
  1343  0054  1803               	skipnc
  1344  0055  0AFA               	incf	_CODIGO+1,f
  1345  0056  3000               	movlw	0
  1346  0057  07FA               	addwf	_CODIGO+1,f
  1347  0058  285B               	goto	i1l949
  1348  0059                     i1l947:	
  1349                           
  1350                           ;main.c: 56: else
  1351                           ;main.c: 57: CODIGO = 0;
  1352  0059  01F9               	clrf	_CODIGO
  1353  005A  01FA               	clrf	_CODIGO+1
  1354  005B                     i1l949:	
  1355                           
  1356                           ;main.c: 59: ADC_Buffer[0] = HIGH;
  1357  005B  087C               	movf	_HIGH,w
  1358  005C  00F2               	movwf	??_ISR
  1359  005D  0872               	movf	??_ISR,w
  1360  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1361  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0060  00C1               	movwf	_ADC_Buffer
  1363                           
  1364                           ;main.c: 60: ADC_Buffer[1] = LOW;
  1365  0061  087B               	movf	_LOW,w
  1366  0062  00F2               	movwf	??_ISR
  1367  0063  0872               	movf	??_ISR,w
  1368  0064  00C2               	movwf	_ADC_Buffer+1
  1369                           
  1370                           ;main.c: 62: HIGH = (CODIGO >> 8);
  1371  0065  087A               	movf	_CODIGO+1,w
  1372  0066  00F2               	movwf	??_ISR
  1373  0067  0872               	movf	??_ISR,w
  1374  0068  00FC               	movwf	_HIGH
  1375                           
  1376                           ;main.c: 63: LOW = CODIGO;
  1377  0069  0879               	movf	_CODIGO,w
  1378  006A  00F2               	movwf	??_ISR
  1379  006B  0872               	movf	??_ISR,w
  1380  006C  00FB               	movwf	_LOW
  1381                           
  1382                           ;main.c: 65: if (CODIGO < 1023)
  1383  006D  3003               	movlw	3
  1384  006E  027A               	subwf	_CODIGO+1,w
  1385  006F  30FF               	movlw	255
  1386  0070  1903               	skipnz
  1387  0071  0279               	subwf	_CODIGO,w
  1388  0072  1803               	skipnc
  1389  0073  287B               	goto	i1l957
  1390                           
  1391                           ;main.c: 66: CODIGO++;
  1392  0074  3001               	movlw	1
  1393  0075  07F9               	addwf	_CODIGO,f
  1394  0076  1803               	skipnc
  1395  0077  0AFA               	incf	_CODIGO+1,f
  1396  0078  3000               	movlw	0
  1397  0079  07FA               	addwf	_CODIGO+1,f
  1398  007A  287D               	goto	i1l959
  1399  007B                     i1l957:	
  1400                           
  1401                           ;main.c: 67: else
  1402                           ;main.c: 68: CODIGO = 0;
  1403  007B  01F9               	clrf	_CODIGO
  1404  007C  01FA               	clrf	_CODIGO+1
  1405  007D                     i1l959:	
  1406                           
  1407                           ;main.c: 70: ADC_Buffer[2] = HIGH;
  1408  007D  087C               	movf	_HIGH,w
  1409  007E  00F2               	movwf	??_ISR
  1410  007F  0872               	movf	??_ISR,w
  1411  0080  00C3               	movwf	_ADC_Buffer+2
  1412                           
  1413                           ;main.c: 71: ADC_Buffer[3] = LOW;
  1414  0081  087B               	movf	_LOW,w
  1415  0082  00F2               	movwf	??_ISR
  1416  0083  0872               	movf	??_ISR,w
  1417  0084  00C4               	movwf	_ADC_Buffer+3
  1418                           
  1419                           ;main.c: 94: USART_WriteChar('@');
  1420  0085  3040               	movlw	64
  1421  0086  120A  118A  2268  120A  118A  	fcall	_USART_WriteChar
  1422                           
  1423                           ;main.c: 95: USART_WriteChar('#');
  1424  008B  3023               	movlw	35
  1425  008C  120A  118A  2268  120A  118A  	fcall	_USART_WriteChar
  1426                           
  1427                           ;main.c: 96: USART_WriteChar('$');
  1428  0091  3024               	movlw	36
  1429  0092  120A  118A  2268  120A  118A  	fcall	_USART_WriteChar
  1430                           
  1431                           ;main.c: 97: unsigned char checksum = 0x50;
  1432  0097  3050               	movlw	80
  1433  0098  00F2               	movwf	??_ISR
  1434  0099  0872               	movf	??_ISR,w
  1435  009A  00F7               	movwf	ISR@checksum
  1436                           
  1437                           ;main.c: 98: for(unsigned char index = 0; index <= 3; index++)
  1438  009B  01F8               	clrf	ISR@index
  1439  009C  3004               	movlw	4
  1440  009D  0278               	subwf	ISR@index,w
  1441  009E  1803               	btfsc	3,0
  1442  009F  28BA               	goto	i1l985
  1443  00A0                     i1l977:	
  1444                           
  1445                           ;main.c: 99: {
  1446                           ;main.c: 100: USART_WriteChar(ADC_Buffer[index]);
  1447  00A0  0878               	movf	ISR@index,w
  1448  00A1  3E41               	addlw	(low (_ADC_Buffer| 0))& (0+255)
  1449  00A2  0084               	movwf	4
  1450  00A3  1383               	bcf	3,7	;select IRP bank0
  1451  00A4  0800               	movf	0,w
  1452  00A5  120A  118A  2268  120A  118A  	fcall	_USART_WriteChar
  1453                           
  1454                           ;main.c: 101: checksum ^= ADC_Buffer[index];
  1455  00AA  0878               	movf	ISR@index,w
  1456  00AB  3E41               	addlw	(low (_ADC_Buffer| 0))& (0+255)
  1457  00AC  0084               	movwf	4
  1458  00AD  1383               	bcf	3,7	;select IRP bank0
  1459  00AE  0800               	movf	0,w
  1460  00AF  00F2               	movwf	??_ISR
  1461  00B0  0872               	movf	??_ISR,w
  1462  00B1  06F7               	xorwf	ISR@checksum,f
  1463  00B2  3001               	movlw	1
  1464  00B3  00F2               	movwf	??_ISR
  1465  00B4  0872               	movf	??_ISR,w
  1466  00B5  07F8               	addwf	ISR@index,f
  1467  00B6  3004               	movlw	4
  1468  00B7  0278               	subwf	ISR@index,w
  1469  00B8  1C03               	skipc
  1470  00B9  28A0               	goto	i1l977
  1471  00BA                     i1l985:	
  1472                           
  1473                           ;main.c: 102: }
  1474                           ;main.c: 104: USART_WriteChar(checksum);
  1475  00BA  0877               	movf	ISR@checksum,w
  1476  00BB  120A  118A  2268  120A  118A  	fcall	_USART_WriteChar
  1477  00C0                     i1l56:	
  1478  00C0  0876               	movf	??_ISR+4,w
  1479  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1480  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1481  00C3  00FF               	movwf	127
  1482  00C4  0875               	movf	??_ISR+3,w
  1483  00C5  008A               	movwf	10
  1484  00C6  0874               	movf	??_ISR+2,w
  1485  00C7  0084               	movwf	4
  1486  00C8  0E73               	swapf	(??_ISR+1)^(0+-128),w
  1487  00C9  0083               	movwf	3
  1488  00CA  0EFE               	swapf	126,f
  1489  00CB  0E7E               	swapf	126,w
  1490  00CC  0009               	retfie
  1491  00CD                     __end_of_ISR:	
  1492                           
  1493                           	psect	intentry
  1494  0004                     __pintentry:	
  1495                           ;incstack = 0
  1496                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1497                           
  1498  0004                     interrupt_function:	
  1499  007E                     saved_w	set	btemp
  1500  0004  00FE               	movwf	btemp
  1501  0005  0E03               	swapf	3,w
  1502  0006  00F3               	movwf	??_ISR+1
  1503  0007  0804               	movf	4,w
  1504  0008  00F4               	movwf	??_ISR+2
  1505  0009  080A               	movf	10,w
  1506  000A  00F5               	movwf	??_ISR+3
  1507  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1508  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1509  000D  087F               	movf	btemp+1,w
  1510  000E  00F6               	movwf	??_ISR+4
  1511  000F  120A  118A  2837   	ljmp	_ISR
  1512                           
  1513                           	psect	text7
  1514  0277                     __ptext7:	
  1515 ;; *************** function i1_TIMER1_Set *****************
  1516 ;; Defined at:
  1517 ;;		line 36 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\timers.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  count           2    0[COMMON] unsigned int 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         2       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0
  1534 ;;      Totals:         2       0       0       0       0
  1535 ;;Total ram usage:        2 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_ISR
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function i1_TIMER1_Set
  1546  0277                     i1_TIMER1_Set:	
  1547                           
  1548                           ;timers.c: 38: TMR1 = count;
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in i1_TIMER1_Set: [wreg]
  1552  0277  0871               	movf	i1TIMER1_Set@count+1,w
  1553  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1555  027A  008F               	movwf	15	;volatile
  1556  027B  0870               	movf	i1TIMER1_Set@count,w
  1557  027C  008E               	movwf	14	;volatile
  1558  027D  0008               	return
  1559  027E                     __end_ofi1_TIMER1_Set:	
  1560                           
  1561                           	psect	text8
  1562  0268                     __ptext8:	
  1563 ;; *************** function _USART_WriteChar *****************
  1564 ;; Defined at:
  1565 ;;		line 42 in file "C:\Projects\BitBucketProjects\Firmwares e Supervisorios\AquisicaoSinaisECG\Firmware\usart.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  USART_Data      1    wreg     unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  USART_Data      1    0[COMMON] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         1       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0
  1582 ;;      Totals:         1       0       0       0       0
  1583 ;;Total ram usage:        1 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_ISR
  1589 ;;		_USART_WriteString
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _USART_WriteChar
  1595  0268                     _USART_WriteChar:	
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _USART_WriteChar: [wreg]
  1599                           ;USART_WriteChar@USART_Data stored from wreg
  1600  0268  00F0               	movwf	USART_WriteChar@USART_Data
  1601  0269                     i1l88:	
  1602                           ;usart.c: 44: while(!PIR1bits.TXIF);
  1603                           
  1604  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1605  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1606  026B  1E0C               	btfss	12,4	;volatile
  1607  026C  2A69               	goto	i1l88
  1608                           
  1609                           ;usart.c: 45: TXREG = USART_Data;
  1610  026D  0870               	movf	USART_WriteChar@USART_Data,w
  1611  026E  0099               	movwf	25	;volatile
  1612  026F  0008               	return
  1613  0270                     __end_of_USART_WriteChar:	
  1614  007E                     btemp	set	126	;btemp
  1615  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    0
    Data        8
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     25      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_TIMER1_Set

Critical Paths under _main in BANK0

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     722
                           _ADC_Init
                        _TIMER1_Init
                         _TIMER1_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          10     6      4     574
                                             15 BANK0     10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Set                                           2     0      2     148
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0     184
                                              2 COMMON     7     7      0
                    _USART_WriteChar
                       i1_TIMER1_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER1_Set                                         2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _TIMER1_Init
   _TIMER1_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _USART_WriteChar
   i1_TIMER1_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      2F       5       58.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      3C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Jul 05 18:19:44 2020

                        _t 003D                          pc 0002                __CFG_CP$OFF 0000  
                       l61 01E0                         _pi 0047                         fsr 0004  
                      l280 00DF                        l851 0100                        l843 00F0  
                      l861 0138                        l853 0110                        l865 0145  
                      l869 0153                        u245 0104                        u325 0168  
                      u265 0112               __CFG_CPD$OFF 0000                        u275 0127  
                      _ISR 0037                        u285 0139                        _LOW 007B  
                      fsr0 0004                        indf 0000               __CFG_FOSC$HS 0000  
             __CFG_LVP$OFF 0000                       ?_ISR 0070                       STR_1 0206  
                     _HIGH 007C                       i1l56 00C0                       i1l88 0269  
                     _OERR 00C1                       _TMR0 0001                       _TMR1 000E  
             __CFG_WRT$OFF 0000                       _main 01A6                       btemp 007E  
         __end_of_ADC_Init 0240                       start 0012    __end_of_USART_WriteChar 0270  
                    ??_ISR 0072                ?_TIMER1_Set 0020            __end_of___aldiv 015C  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      i1l947 0059  
                    i1l957 007B                      i1l949 005B                      i1l959 007D  
                    i1l985 00BA                      i1l977 00A0                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TXREG 0019               USART_Init@BR 0038  
                    _valor 0039             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E                ?_USART_Init 002F  
          __initialization 0015               __end_of_main 01E1          i1TIMER1_Set@count 0070  
                   ??_main 0039               ?_TIMER1_Init 0070                     _CODIGO 0079  
      __size_of_TIMER1_Set 0007             __CFG_PWRTE$OFF 0000                  ??___aldiv 0028  
         ?_USART_WriteChar 0070                  ?_ADC_Init 0070                     saved_w 007E  
      __size_of_USART_Init 004A              ?i1_TIMER1_Set 0070    __end_of__initialization 0033  
           __pcstackCOMMON 0070                ISR@checksum 0077               __pidataBANK0 0260  
           _OPTION_REGbits 0081                 ??_ADC_Init 0020             ??i1_TIMER1_Set 0072  
               __pbssBANK0 0039                 __pmaintext 01A6                 __pintentry 0004  
             ??_TIMER1_Set 0022       __size_of_TIMER1_Init 000F                 __stringtab 0200  
       __end_of_TIMER1_Set 0277               ??_USART_Init 0033                    ___aldiv 00CD  
                  __ptext1 015C                    __ptext2 00CD                    __ptext3 0270  
                  __ptext4 0251                    __ptext5 022E                    __ptext6 0037  
                  __ptext7 0277                    __ptext8 0268               __size_of_ISR 0096  
                _T1CONbits 0010           ___aldiv@dividend 0024         __end_of_USART_Init 01A6  
     end_of_initialization 0033                  _RCSTAbits 0018           ___aldiv@quotient 002B  
     __end_ofi1_TIMER1_Set 027E          __size_of_ADC_Init 0012                  _TXSTAbits 0098  
          TIMER1_Set@count 0020   __size_of_USART_WriteChar 0008        start_initialization 0015  
              __end_of_ISR 00CD                 init_fetch0 0240                __pdataBANK0 0047  
              __pbssCOMMON 0079                  ___latbits 0002              __pcstackBANK0 0020  
                 ISR@index 0078      __size_ofi1_TIMER1_Set 0007                   ?___aldiv 0020  
                __pstrings 0200              ??_TIMER1_Init 0020         USART_Init@BaudRate 002F  
                 _ADC_Init 022E          ??_USART_WriteChar 0070               i1_TIMER1_Set 0277  
          ___aldiv@divisor 0020          interrupt_function 0004            ___aldiv@counter 0029  
                 _PIE1bits 008C                   _PIR1bits 000C                  _tipoSinal 0045  
               _ADCON0bits 001F                __stringbase 0205                 _ADCON1bits 009F  
      __end_of_TIMER1_Init 0260                 _ADC_Buffer 0041           __size_of___aldiv 008F  
       __end_of__stringtab 0206              _tempo_periodo 004B              __size_of_main 003B  
              _TIMER1_Init 0251                 _INTCONbits 000B                   init_ram0 0244  
                 intlevel1 0000  USART_WriteChar@USART_Data 0070                  stringcode 0200  
               _TIMER1_Set 0270            _USART_WriteChar 0268                   stringdir 0200  
                 stringtab 0200               ___aldiv@sign 002A                 _USART_Init 015C  
